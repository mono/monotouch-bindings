<Type Name="FBFrictionlessRecipientCache" FullName="MonoTouch.FacebookConnect.FBFrictionlessRecipientCache">
  <TypeSignature Language="C#" Value="public class FBFrictionlessRecipientCache : MonoTouch.FacebookConnect.FBCacheDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FBFrictionlessRecipientCache extends MonoTouch.FacebookConnect.FBCacheDescriptor" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.FacebookConnect</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.FacebookConnect.FBCacheDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("FBFrictionlessRecipientCache", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Maintains a cache of friends that can recieve application requests from the user in using the frictionless feature of the requests web dialog.</para>
    </summary>
    <remarks>
      <para>Maintains a cache of friends that can recieve application requests from the user in using the frictionless feature of the requests web dialog.</para>
      <para>This class follows the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBCacheDescriptor" /></computeroutput> pattern used elsewhere in the SDK, and applications may call one of the prefetchAndCacheForSession methods to fetch a friend list prior to the point where a dialog is presented. The cache is also updated with each presentation of the request dialog using the cache instance. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBFrictionlessRecipientCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes an empty cache instance </para>
        </summary>
        <remarks>
          <para>Initializes an empty cache instance </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBFrictionlessRecipientCache (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBFrictionlessRecipientCache (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBFrictionlessRecipientCache (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreFrictionlessRecipients">
      <MemberSignature Language="C#" Value="public virtual bool AreFrictionlessRecipients (MonoTouch.Foundation.NSArray users);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AreFrictionlessRecipients(class MonoTouch.Foundation.NSArray users) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("areFrictionlessRecipients:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="users" Type="MonoTouch.Foundation.NSArray" />
      </Parameters>
      <Docs>
        <param name="users">An NSArray of NSString, NSNumber of  objects representing users to check </param>
        <summary>
          <para>Checks to see if a collection of users or FBIDs for users are known to be enabled for frictionless requestests</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Checks to see if a collection of users or FBIDs for users are known to be enabled for frictionless requestests</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFrictionlessRecipient">
      <MemberSignature Language="C#" Value="public virtual bool IsFrictionlessRecipient (MonoTouch.Foundation.NSObject user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFrictionlessRecipient(class MonoTouch.Foundation.NSObject user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("isFrictionlessRecipient:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="user">An NSString, NSNumber of  representing a user to check </param>
        <summary>
          <para>Checks to see if a given user or FBID for a user is known to be enabled for frictionless requestests</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Checks to see if a given user or FBID for a user is known to be enabled for frictionless requestests</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchAndCache">
      <MemberSignature Language="C#" Value="public virtual void PrefetchAndCache (MonoTouch.FacebookConnect.FBSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrefetchAndCache(class MonoTouch.FacebookConnect.FBSession session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("prefetchAndCacheForSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
      </Parameters>
      <Docs>
        <param name="session">The session to use for the request; nil indicates that the Active Session should be used </param>
        <summary>
          <para>Issues a request and fills the cache with a list of users to use for frictionless requests</para>
        </summary>
        <remarks>
          <para>Issues a request and fills the cache with a list of users to use for frictionless requests</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchAndCache">
      <MemberSignature Language="C#" Value="public virtual void PrefetchAndCache (MonoTouch.FacebookConnect.FBSession session, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrefetchAndCache(class MonoTouch.FacebookConnect.FBSession session, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("prefetchAndCacheForSession:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="session">The session to use for the request; nil indicates that the Active Session should be used</param>
        <param name="handler">An optional completion handler, called when the request for cached users has completed. It can be useful to use the handler to enable UI or perform other request-related operations, after the cache is populated. </param>
        <summary>
          <para>Issues a request and fills the cache with a list of users to use for frictionless requests</para>
        </summary>
        <remarks>
          <para>Issues a request and fills the cache with a list of users to use for frictionless requests</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecipientIDs">
      <MemberSignature Language="C#" Value="public virtual string RecipientIDs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RecipientIDs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("recipientIDs", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setRecipientIDs:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
