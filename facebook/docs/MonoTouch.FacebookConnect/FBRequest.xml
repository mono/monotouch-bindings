<?xml version="1.0" encoding="utf-8"?>
<Type Name="FBRequest" FullName="MonoTouch.FacebookConnect.FBRequest">
  <TypeSignature Language="C#" Value="public class FBRequest : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FBRequest extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.FacebookConnect</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("FBRequest", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object is used to setup and manage requests to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Graph and REST APIs. This class provides helper methods that simplify the connection and response handling.</para>
    </summary>
    <remarks>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object is used to setup and manage requests to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Graph and REST APIs. This class provides helper methods that simplify the connection and response handling.</para>
      <para>An &lt;FBSession&gt; object is required for all authenticated uses of <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput>. Requests that do not require an unauthenticated user are also supported and do not require an &lt;FBSession&gt; object to be passed in.</para>
      <para>An instance of <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> represents the arguments and setup for a connection to <see cref="T:MonoTouch.FacebookConnect.Facebook" />. After creating an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object it can be used to setup a connection to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> through the &lt;FBRequestConnection&gt; object. The &lt;FBRequestConnection&gt; object is created to manage a single connection. To cancel a connection use the instance method in the &lt;FBRequestConnection&gt; class.</para>
      <para>An <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object may be reused to issue multiple connections to <see cref="T:MonoTouch.FacebookConnect.Facebook" />. However each &lt;FBRequestConnection&gt; instance will manage one connection.</para>
      <para>Class and instance methods prefixed with **start* ** can be used to perform the request setup and initiate the connection in a single call. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Creating a request</para>
        </summary>
        <remarks>
          <para>Creating a request</para>
          <para>Calls &lt;initWithSession:graphPath:parameters:HTTPMethod:&gt; with the default parameters. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.FacebookConnect.FBSession session, string graphPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.FacebookConnect.FBSession session, string graphPath) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithSession:graphPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="graphPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="session">The session object representing the identity of the  user making the request. A nil value indicates a request that requires no token; to use the active session pass [ activeSession].</param>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me". </param>
        <summary>
          <para>Calls &lt;initWithSession:graphPath:parameters:HTTPMethod:&gt; with default parameters except for the ones provided to this method.</para>
        </summary>
        <remarks>
          <para>Calls &lt;initWithSession:graphPath:parameters:HTTPMethod:&gt; with default parameters except for the ones provided to this method.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.FacebookConnect.FBSession session, string graphPath, MonoTouch.FacebookConnect.FBGraphObject graphObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.FacebookConnect.FBSession session, string graphPath, class MonoTouch.FacebookConnect.FBGraphObject graphObject) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initForPostWithSession:graphPath:graphObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="graphObject" Type="MonoTouch.FacebookConnect.FBGraphObject" />
      </Parameters>
      <Docs>
        <param name="session">The session object representing the identity of the  user making the request. A nil value indicates a request that requires no token; to use the active session pass [ activeSession].</param>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="graphObject">An object or open graph action to post. </param>
        <summary>
          <para>Initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object that will do a graph request.</para>
        </summary>
        <remarks>
          <para>Initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object that will do a graph request.</para>
          <para>Note that this only sets properties on the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput>.</para>
          <para>To send the request, initialize a &lt;FBRequestConnection&gt;, add this request, and send &lt;[<see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /> start]&gt;. See other methods on this class for shortcuts to simplify this process.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.FacebookConnect.FBSession session, string graphPath, MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.FacebookConnect.FBSession session, string graphPath, class MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithSession:graphPath:parameters:HTTPMethod:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="HTTPMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="session">The session object representing the identity of the  user making the request. A nil value indicates a request that requires no token; to use the active session pass [ activeSession].</param>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="parameters">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</param>
        <param name="HTTPMethod">The HTTP method to use for the request. The default is value of nil implies a GET. </param>
        <summary>
          <para>Initializes an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object for a Graph API request call.</para>
        </summary>
        <remarks>
          <para>Initializes an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object for a Graph API request call.</para>
          <para>Note that this only sets properties on the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object.</para>
          <para>To send the request, initialize an &lt;FBRequestConnection&gt; object, add this request, and send &lt;[<see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /> start]&gt;. See other methods on this class for shortcuts to simplify this process.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequest (MonoTouch.FacebookConnect.FBSession session, string restMethod, MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod, bool fakearg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.FacebookConnect.FBSession session, string restMethod, class MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod, bool fakearg) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithSession:restMethod:parameters:HTTPMethod:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="restMethod" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="HTTPMethod" Type="System.String" />
        <Parameter Name="fakearg" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="session">The session object representing the identity of the  user making the request. A nil value indicates a request that requires no token; to use the active session pass [ activeSession].</param>
        <param name="restMethod">A valid REST API method.</param>
        <param name="parameters">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</param>
        <param name="HTTPMethod">The HTTP method to use for the request. The default is value of nil implies a GET. </param>
        <param name="fakearg">To be added.</param>
        <summary>
          <para>Initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object that will do a rest API request.</para>
        </summary>
        <remarks>
          <para>Initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object that will do a rest API request.</para>
          <para>Prefer to use graph requests instead of this where possible.</para>
          <para>Note that this only sets properties on the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput>.</para>
          <para>To send the request, initialize a &lt;FBRequestConnection&gt;, add this request, and send &lt;[<see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /> start]&gt;. See other methods on this class for shortcuts to simplify this process.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("connect")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSUrlConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSUrlConnection Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("connection")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setConnection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSUrlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public MonoTouch.FacebookConnect.FBRequestDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBRequestDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSError Error { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSError Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("error")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setError:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Error returned by the server in case of request's failure (or nil otherwise). </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Error returned by the server in case of request's failure (or nil otherwise). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequest">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest GetRequest (MonoTouch.Foundation.NSMutableDictionary parameters, string method, MonoTouch.FacebookConnect.FBRequestDelegate httpMethodDelegatedelegate, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest GetRequest(class MonoTouch.Foundation.NSMutableDictionary parameters, string method, class MonoTouch.FacebookConnect.FBRequestDelegate httpMethodDelegatedelegate, string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getRequestWithParams:httpMethod:delegate:requestURL:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSMutableDictionary" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="httpMethodDelegatedelegate" Type="MonoTouch.FacebookConnect.FBRequestDelegate" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <param name="method">To be added.</param>
        <param name="httpMethodDelegatedelegate">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestForMe">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest GetRequestForMe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.FacebookConnect.FBRequest GetRequestForMe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("requestForMe")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            <see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /> start methods</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /> start methods</para>
          <para>These methods start an &lt;FBRequestConnection&gt;.</para>
          <para>These methods simplify the process of preparing a request and starting the connection. The methods handle initializing an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object, initializing a &lt;FBRequestConnection&gt; object, adding the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object to the to the &lt;FBRequestConnection&gt;, and finally starting the connection.</para>
          <para>
            <see cref="T:MonoTouch.FacebookConnect.FBRequest" /> factory methods</para>
          <para>These methods initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for common scenarios.</para>
          <para>These simplify the process of preparing a request to send. These initialize a <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> based on strongly typed parameters that are specific to the scenario.</para>
          <para>These method do not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para>Creates a request representing a Graph API call to the "me" endpoint, using the active session.</para>
          <para>Simplifies preparing a request to retrieve the user's identity.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para>A successful Graph API call will return an &lt;FBGraphUser&gt; object representing the user's identity.</para>
          <para>Note you may change the session property after construction if a session other than the active session is preferred. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestForMyFriends">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest GetRequestForMyFriends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.FacebookConnect.FBRequest GetRequestForMyFriends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("requestForMyFriends")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Creates a request representing a Graph API call to the "me/friends" endpoint using the active session.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Creates a request representing a Graph API call to the "me/friends" endpoint using the active session.</para>
          <para>Simplifies preparing a request to retrieve the user's friends.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para>A successful Graph API call will return an array of &lt;FBGraphUser&gt; objects representing the user's friends. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphBasePath">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GraphBasePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.Foundation.NSString GraphBasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphObject">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.FacebookConnect.FBGraphObject GraphObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBGraphObject GraphObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("graphObject")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setGraphObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBGraphObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The graph object to post with the request.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The graph object to post with the request.</para>
          <para>May be used to read the graph object that was automatically set during the object initiliazation. Make any required modifications prior to sending the request. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphPath">
      <MemberSignature Language="C#" Value="public virtual string GraphPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GraphPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("graphPath", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setGraphPath:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public virtual string HttpMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("httpMethod")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setHttpMethod:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The API method which will be called. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The API method which will be called. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HTTPMethod">
      <MemberSignature Language="C#" Value="public virtual string HTTPMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HTTPMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("HTTPMethod", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setHTTPMethod:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public virtual bool Loading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Loading() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("loading")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSMutableDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSMutableDictionary Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("parameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSMutableDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The parameters for the request.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The parameters for the request.</para>
          <para>May be used to read the parameters that were automatically set during the object initiliazation. Make any required modifications prior to sending the request.</para>
          <para>
            <computeroutput>NSString</computeroutput> parameters are used to generate URL parameter values or JSON parameters. <computeroutput>NSData</computeroutput> and <computeroutput>UIImage</computeroutput> parameters are added as attachments to the HTTP body and referenced by name in the URL and/or JSON. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForCustomAudienceThirdPartyID">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForCustomAudienceThirdPartyID (MonoTouch.FacebookConnect.FBSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForCustomAudienceThirdPartyID(class MonoTouch.FacebookConnect.FBSession session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForCustomAudienceThirdPartyID:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
      </Parameters>
      <Docs>
        <param name="session">The  to use to establish the user's identity for users logged into  through this app. If nil, then the activeSession is used. If the session is not open, then the appID|clientToken are used to construct the access token for the request.</param>
        <summary>
          <para>Creates a request representing the Graph API call to retrieve a Custom Audience "thirdy party ID" for the app's <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user. Callers will send this ID back to their own servers, collect up a set to create a <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Custom Audience with, and then use the resultant Custom Audience to target ads.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing the Graph API call to retrieve a Custom Audience "thirdy party ID" for the app's <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user. Callers will send this ID back to their own servers, collect up a set to create a <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Custom Audience with, and then use the resultant Custom Audience to target ads.</para>
          <para>
This method will thrown an exception if either &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> defaultAppID]&gt; or &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> clientToken]&gt; are <computeroutput>nil</computeroutput>. The appID won't be nil when the pList includes the appID, or if it's explicitly set. The clientToken needs to be set via &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> setClientToken:]&gt;.</para>
          <para>The JSON in the request's response will include an "custom_audience_third_party_id" key/value pair, with the value being the ID retrieved. This ID is an encrypted encoding of the <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user's ID and the invoking <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app ID. Multiple calls with the same user will return different IDs, thus these IDs cannot be used to correlate behavior across devices or applications, and are only meaningful when sent back to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> for creating Custom Audiences.</para>
          <para>The ID retrieved represents the <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user identified in the following way: if the specified session (or activeSession if the specified session is <computeroutput>nil</computeroutput>) is open, the ID will represent the user associated with the activeSession; otherwise the ID will represent the user logged into the native <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app on the device. If there is no native <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app, no one is logged into it, or the user has opted out at the iOS level from ad tracking, then a <computeroutput>nil</computeroutput> ID will be returned.</para>
          <para>This method itself returning <computeroutput>nil</computeroutput> indicates that either the user has opted-out (via iOS) from Ad Tracking, or a specific <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user cannot be identified. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForDeleteObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForDeleteObject (MonoTouch.Foundation.NSObject aObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForDeleteObject(class MonoTouch.Foundation.NSObject aObject) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForDeleteObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="aObject">This can be an NSString, NSNumber or NSDictionary representing an object to delete </param>
        <summary>
          <para>Creates request representing a DELETE to a object.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates request representing a DELETE to a object.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForGraphPath (string graphPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForGraphPath(string graphPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForGraphPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me". </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to make a Graph API call for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to make a Graph API call for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPlacesSearchAtCoordinate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPlacesSearchAtCoordinate (MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate, int radius, int limit, string searchText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPlacesSearchAtCoordinate(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate, int32 radius, int32 limit, string searchText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="radius" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="searchText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="coordinate">The search coordinates.</param>
        <param name="radius">The search radius in meters.</param>
        <param name="limit">The maxiumum number of results to return. It is possible to receive fewer than this because of the radius and because of server limits.</param>
        <param name="searchText">The text to use in the query to narrow the set of places returned. </param>
        <summary>
          <para>Creates a request representing a Graph API call to the "search" endpoint for a given location using the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing a Graph API call to the "search" endpoint for a given location using the active session.</para>
          <para>Simplifies preparing a request to search for places near a coordinate.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para>A successful Graph API call will return an array of &lt;FBGraphPlace&gt; objects representing the nearby locations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject (MonoTouch.FacebookConnect.FBOpenGraphObject aObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject(class MonoTouch.FacebookConnect.FBOpenGraphObject aObject) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPostOpenGraphObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.FacebookConnect.FBOpenGraphObject" />
      </Parameters>
      <Docs>
        <param name="aObject">The Open Graph object to create. Some common expected fields include "title", "image", "url", etc. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to create a user owned Open Graph object for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to create a user owned Open Graph object for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject (MonoTouch.Foundation.NSObject objectId, string title, MonoTouch.Foundation.NSObject image, MonoTouch.Foundation.NSObject url, string description, MonoTouch.Foundation.NSDictionary objectProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject(class MonoTouch.Foundation.NSObject objectId, string title, class MonoTouch.Foundation.NSObject image, class MonoTouch.Foundation.NSObject url, string description, class MonoTouch.Foundation.NSDictionary objectProperties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForUpdateOpenGraphObjectWithId:title:image:url:description:objectProperties:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="objectProperties" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="objectId">The id of the Open Graph object to update. </param>
        <param name="title">The updated title of the Open Graph object. </param>
        <param name="image">The updated link to an image to be associated with the Open Graph object. </param>
        <param name="url">The updated url to be associated with the Open Graph object. </param>
        <param name="description">The updated description of the Open Graph object. </param>
        <param name="objectProperties">Any additional properties to update for the Open Graph object. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to update a user owned Open Graph object for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to update a user owned Open Graph object for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject (string aType, string title, MonoTouch.Foundation.NSObject image, MonoTouch.Foundation.NSObject url, string description, MonoTouch.Foundation.NSDictionary objectProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostOpenGraphObject(string aType, string title, class MonoTouch.Foundation.NSObject image, class MonoTouch.Foundation.NSObject url, string description, class MonoTouch.Foundation.NSDictionary objectProperties) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPostOpenGraphObjectWithType:title:image:url:description:objectProperties:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="objectProperties" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="aType">The fully-specified Open Graph object type (e.g., my_app_namespace:my_object_name) </param>
        <param name="title">The title of the Open Graph object. </param>
        <param name="image">The link to an image to be associated with the Open Graph object. </param>
        <param name="url">The url to be associated with the Open Graph object. </param>
        <param name="description">The description to be associated with the object. </param>
        <param name="objectProperties">Any additional properties for the Open Graph object. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to create a user owned Open Graph object for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to create a user owned Open Graph object for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostStatusUpdate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostStatusUpdate (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostStatusUpdate(string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPostStatusUpdate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message to post. </param>
        <summary>
          <para>Creates a request representing a status update.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing a status update.</para>
          <para>Simplifies preparing a request to post a status update.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostStatusUpdate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostStatusUpdate (string message, MonoTouch.Foundation.NSObject place, MonoTouch.Foundation.NSObject[] tags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostStatusUpdate(string message, class MonoTouch.Foundation.NSObject place, class MonoTouch.Foundation.NSObject[] tags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPostStatusUpdate:place:tags:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="place" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="tags" Type="MonoTouch.Foundation.NSObject[]" />
      </Parameters>
      <Docs>
        <param name="message">The message to post. </param>
        <param name="place">The place to checkin with, or nil. Place may be an fbid or a graph object representing a place. </param>
        <param name="tags">Array of friends to tag in the status update, each element may be an fbid or a graph object representing a user. </param>
        <summary>
          <para>Creates a request representing a status update.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing a status update.</para>
          <para>Simplifies preparing a request to post a status update.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForPostWithGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForPostWithGraphPath (string graphPath, MonoTouch.FacebookConnect.FBGraphObject graphObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForPostWithGraphPath(string graphPath, class MonoTouch.FacebookConnect.FBGraphObject graphObject) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForPostWithGraphPath:graphObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="graphObject" Type="MonoTouch.FacebookConnect.FBGraphObject" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="graphObject">An object or open graph action to post. </param>
        <summary>
          <para>Creates a request representing a POST for a graph object.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing a POST for a graph object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForUpdateOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForUpdateOpenGraphObject (MonoTouch.FacebookConnect.FBOpenGraphObject aObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForUpdateOpenGraphObject(class MonoTouch.FacebookConnect.FBOpenGraphObject aObject) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForUpdateOpenGraphObject:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.FacebookConnect.FBOpenGraphObject" />
      </Parameters>
      <Docs>
        <param name="aObject">The Open Graph object to update the existing object with. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to update a user owned Open Graph object for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to update a user owned Open Graph object for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForUploadPhoto">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForUploadPhoto (MonoTouch.UIKit.UIImage photo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForUploadPhoto(class MonoTouch.UIKit.UIImage photo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForUploadPhoto:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="photo" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="photo">A UIImage for the photo to upload. </param>
        <summary>
          <para>Creates a request representing a Graph API call to upload a photo to the app's album using the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a request representing a Graph API call to upload a photo to the app's album using the active session.</para>
          <para>Simplifies preparing a request to post a photo.</para>
          <para>To post a photo to a specific album, get the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> returned from this method call, then modify the request parameters by adding the album ID to an "album" key.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestForUploadStagingResource">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestForUploadStagingResource (MonoTouch.UIKit.UIImage image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestForUploadStagingResource(class MonoTouch.UIKit.UIImage image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestForUploadStagingResourceWithImage:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
      </Parameters>
      <Docs>
        <param name="image">A UIImage for the image to upload. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to upload an image to create a staging resource. Staging resources allow you to post binary data such as images, in preparation for a post of an open graph object or action which references the image. The URI returned when uploading a staging resource may be passed as the image property for an open graph object or action.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to upload an image to create a staging resource. Staging resources allow you to post binary data such as images, in preparation for a post of an open graph object or action which references the image. The URI returned when uploading a staging resource may be passed as the image property for an open graph object or action.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestWithGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest RequestWithGraphPath (string graphPath, MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest RequestWithGraphPath(string graphPath, class MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("requestWithGraphPath:parameters:HTTPMethod:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="HTTPMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="parameters">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</param>
        <param name="HTTPMethod">The HTTP method to use for the request. A nil value implies a GET. </param>
        <summary>
          <para>Returns a newly initialized request object that can be used to make a Graph API call for the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a newly initialized request object that can be used to make a Graph API call for the active session.</para>
          <para>This method simplifies the preparation of a Graph API call.</para>
          <para>This method does not initialize an &lt;FBRequestConnection&gt; object. To initiate the API call first instantiate an &lt;FBRequestConnection&gt; object, add the request to this object, then call the <computeroutput>start</computeroutput> method on the connection instance.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseText">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSMutableData ResponseText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSMutableData ResponseText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("responseText")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setResponseText:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSMutableData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestMethod">
      <MemberSignature Language="C#" Value="public virtual string RestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RestMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("restMethod", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setRestMethod:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static string Serialize (string baseUrl, MonoTouch.Foundation.NSDictionary parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize(string baseUrl, class MonoTouch.Foundation.NSDictionary parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("serializeURL:params:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static string Serialize (string baseUrl, MonoTouch.Foundation.NSDictionary parameters, string httpMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize(string baseUrl, class MonoTouch.Foundation.NSDictionary parameters, string httpMethod) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("serializeURL:params:httpMethod:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="httpMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">To be added.</param>
        <param name="parameters">To be added.</param>
        <param name="httpMethod">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.FacebookConnect.FBSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBSession Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("session")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The &lt;FBSession&gt; session object to use for the request.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The &lt;FBSession&gt; session object to use for the request.</para>
          <para>May be used to read the session that was automatically set during the object initiliazation. Make any required modifications prior to sending the request. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.FacebookConnect.FBRequestConnection Start (MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.FacebookConnect.FBRequestConnection Start(class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Instance methods</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Instance methods</para>
          <para>Starts a connection to the <see cref="T:MonoTouch.FacebookConnect.Facebook" /> API.</para>
          <para>This is used to start an API call to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> and call the block when the request completes with a success, error, or cancel.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.FacebookConnect.FBRequestState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.FacebookConnect.FBRequestState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("state")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("url")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setUrl:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The URL which will be contacted to execute the request. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The URL which will be contacted to execute the request. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>