<?xml version="1.0" encoding="utf-8"?>
<Type Name="FBPlacePickerViewController" FullName="MonoTouch.FacebookConnect.FBPlacePickerViewController">
  <TypeSignature Language="C#" Value="public class FBPlacePickerViewController : MonoTouch.FacebookConnect.FBViewController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FBPlacePickerViewController extends MonoTouch.FacebookConnect.FBViewController" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.FacebookConnect</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.FacebookConnect.FBViewController</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("FBPlacePickerViewController", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> class creates a controller object that manages the user interface for displaying and selecting nearby places.</para>
    </summary>
    <remarks>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> class creates a controller object that manages the user interface for displaying and selecting nearby places.</para>
      <para>When the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> view loads it creates a <computeroutput>UITableView</computeroutput> object where the places near a given location will be displayed. You can access this view through the <computeroutput>tableView</computeroutput> property.</para>
      <para>The place data can be pre-fetched and cached prior to using the view controller. The cache is setup using an &lt;FBCacheDescriptor&gt; object that can trigger the data fetch. Any place data requests will first check the cache and use that data. If the place picker is being displayed cached data will initially be shown before a fresh copy is retrieved.</para>
      <para>The <computeroutput>delegate</computeroutput> property may be set to an object that conforms to the &lt;FBPlacePickerDelegate&gt; protocol. The <computeroutput>delegate</computeroutput> object will receive updates related to place selection and data changes. The delegate can also be used to filter the places to display in the picker. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBPlacePickerViewController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Initializes a place picker view controller. </para>
        </summary>
        <remarks>
          <para>Initializes a place picker view controller. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBPlacePickerViewController (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">An unarchiver object. </param>
        <summary>
          <para>Initializes a place picker view controller.</para>
        </summary>
        <remarks>
          <para>Initializes a place picker view controller.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBPlacePickerViewController (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBPlacePickerViewController (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBPlacePickerViewController (string nibName, MonoTouch.Foundation.NSBundle nibBundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string nibName, class MonoTouch.Foundation.NSBundle nibBundle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithNibName:bundle:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nibName" Type="System.String" />
        <Parameter Name="nibBundle" Type="MonoTouch.Foundation.NSBundle" />
      </Parameters>
      <Docs>
        <param name="nibName">The name of the nib file to associate with the view controller. The nib file name should not contain any leading path information. If you specify nil, the nibName property is set to nil. </param>
        <param name="nibBundle">The bundle in which to search for the nib file. This method looks for the nib file in the bundle's language-specific project directories first, followed by the Resources directory. If nil, this method looks for the nib file in the main bundle. </param>
        <summary>
          <para>Initializes a place picker view controller.</para>
        </summary>
        <remarks>
          <para>Initializes a place picker view controller.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDescriptorWithLocationCoordinate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBCacheDescriptor CacheDescriptorWithLocationCoordinate (MonoTouch.CoreLocation.CLLocationCoordinate2D locationCoordinate, int radiusInMeters, string searchText, int resultsLimit, MonoTouch.Foundation.NSSet fieldsForRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBCacheDescriptor CacheDescriptorWithLocationCoordinate(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D locationCoordinate, int32 radiusInMeters, string searchText, int32 resultsLimit, class MonoTouch.Foundation.NSSet fieldsForRequest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cacheDescriptorWithLocationCoordinate:radiusInMeters:searchText:resultsLimit:fieldsForRequest:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBCacheDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationCoordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="radiusInMeters" Type="System.Int32" />
        <Parameter Name="searchText" Type="System.String" />
        <Parameter Name="resultsLimit" Type="System.Int32" />
        <Parameter Name="fieldsForRequest" Type="MonoTouch.Foundation.NSSet" />
      </Parameters>
      <Docs>
        <param name="locationCoordinate">The coordinates to use for place discovery. </param>
        <param name="radiusInMeters">The radius to use for place discovery. </param>
        <param name="searchText">The search words used to narrow down the results returned. </param>
        <param name="resultsLimit">The maximum number of places to fetch. </param>
        <param name="fieldsForRequest">Addtional fields to fetch when making the Graph API call to get place data. </param>
        <summary>
          <para>Creates a cache descriptor with additional fields and a profile ID for use with the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> object.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates a cache descriptor with additional fields and a profile ID for use with the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> object.</para>
          <para>An <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBCacheDescriptor" /></computeroutput> object may be used to pre-fetch data before it is used by the view controller. It may also be used to configure the <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBPlacePickerViewController" /></computeroutput> object.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("clearSelection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Clears the current selection, so the picker is ready for a fresh use. </para>
        </summary>
        <remarks>
          <para>Clears the current selection, so the picker is ready for a fresh use. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureUsingCachedDescriptor">
      <MemberSignature Language="C#" Value="public virtual void ConfigureUsingCachedDescriptor (MonoTouch.FacebookConnect.FBCacheDescriptor cacheDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigureUsingCachedDescriptor(class MonoTouch.FacebookConnect.FBCacheDescriptor cacheDescriptor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("configureUsingCachedDescriptor:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheDescriptor" Type="MonoTouch.FacebookConnect.FBCacheDescriptor" />
      </Parameters>
      <Docs>
        <param name="cacheDescriptor">The &lt;FBCacheDescriptor&gt; containing the cache query properties. </param>
        <summary>
          <para>Configures the properties used in the caching data queries.</para>
        </summary>
        <remarks>
          <para>Configures the properties used in the caching data queries.</para>
          <para>Cache descriptors are used to fetch and cache the data used by the view controller. If the view controller finds a cached copy of the data, it will first display the cached content then fetch a fresh copy from the server.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataDidChange">
      <MemberSignature Language="C#" Value="public event EventHandler DataDidChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataDidChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public MonoTouch.FacebookConnect.FBPlacePickerDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBPlacePickerDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBPlacePickerDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldsForRequest">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSSet FieldsForRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSSet FieldsForRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("fieldsForRequest", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setFieldsForRequest:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MonoTouch.FacebookConnect.FBPlacePickerErrorEventArgs&gt; HandleError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MonoTouch.FacebookConnect.FBPlacePickerErrorEventArgs&gt; HandleError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MonoTouch.FacebookConnect.FBPlacePickerErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemPicturesEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ItemPicturesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemPicturesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("itemPicturesEnabled")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setItemPicturesEnabled:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A Boolean value that indicates whether place profile pictures are displayed. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>A Boolean value that indicates whether place profile pictures are displayed. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadData">
      <MemberSignature Language="C#" Value="public virtual void LoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("loadData")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Initiates a query to get place data the first time or in response to changes in the search criteria, filter, or location information.</para>
        </summary>
        <remarks>
          <para>Initiates a query to get place data the first time or in response to changes in the search criteria, filter, or location information.</para>
          <para>A cached copy will be returned if available. The cached view is temporary until a fresh copy is retrieved from the server. It is legal to call this more than once. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationCoordinate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreLocation.CLLocationCoordinate2D LocationCoordinate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D LocationCoordinate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("locationCoordinate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLocationCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreLocation.CLLocationCoordinate2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The coordinates to use for place discovery. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The coordinates to use for place discovery. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadiusInMeters">
      <MemberSignature Language="C#" Value="public virtual int RadiusInMeters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RadiusInMeters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("radiusInMeters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setRadiusInMeters:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The radius to use for place discovery. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The radius to use for place discovery. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultsLimit">
      <MemberSignature Language="C#" Value="public virtual int ResultsLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ResultsLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("resultsLimit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setResultsLimit:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The maximum number of places to fetch. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The maximum number of places to fetch. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchText">
      <MemberSignature Language="C#" Value="public virtual string SearchText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SearchText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("searchText", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSearchText:", MonoTouch.ObjCRuntime.ArgumentSemantic.Copy)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public MonoTouch.FacebookConnect.FBGraphPlace Selection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBGraphPlace Selection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBGraphPlace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionDidChange">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionDidChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionDidChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.FacebookConnect.FBSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBSession Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("session")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The session that is used in the request for place data. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The session that is used in the request for place data. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldIncludeUser">
      <MemberSignature Language="C#" Value="public MonoTouch.FacebookConnect.FBPlacePickerCondition ShouldIncludeUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.FacebookConnect.FBPlacePickerCondition ShouldIncludeUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBPlacePickerCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinner">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIActivityIndicatorView Spinner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.UIActivityIndicatorView Spinner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("spinner")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSpinner:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIActivityIndicatorView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Returns an outlet for the spinner used in the view controller. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns an outlet for the spinner used in the view controller. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableView">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UITableView TableView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.UITableView TableView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("tableView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTableView:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UITableView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Returns an outlet for the table view managed by the view controller. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns an outlet for the table view managed by the view controller. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateView">
      <MemberSignature Language="C#" Value="public virtual void UpdateView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("updateView")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Updates the view locally without fetching data from the server or from cache.</para>
        </summary>
        <remarks>
          <para>Updates the view locally without fetching data from the server or from cache.</para>
          <para>Use this if the filter properties change. This may affect the order or display of information. </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>