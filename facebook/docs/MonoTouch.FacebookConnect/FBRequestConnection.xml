<?xml version="1.0" encoding="utf-8"?>
<Type Name="FBRequestConnection" FullName="MonoTouch.FacebookConnect.FBRequestConnection">
  <TypeSignature Language="C#" Value="public class FBRequestConnection : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FBRequestConnection extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.FacebookConnect</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("FBRequestConnection", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> represents a single connection to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> to service a request.</para>
    </summary>
    <remarks>
      <para>The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> represents a single connection to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> to service a request.</para>
      <para>The request settings are encapsulated in a reusable &lt;FBRequest&gt; object. The <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> object encapsulates the concerns of a single communication e.g. starting a connection, canceling a connection, or batching requests. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequestConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <para>Creating a request</para>
        </summary>
        <remarks>
          <para>Creating a request</para>
          <para>Calls &lt;initWithTimeout:&gt; with a default timeout of 180 seconds. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequestConnection (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequestConnection (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequestConnection (double timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 timeout) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithTimeout:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="timeout" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="timeout">The NSTimeInterval (seconds) to wait for a response before giving up. </param>
        <summary>
          <para>
            <computeroutput>
              <see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" />
            </computeroutput> objects are used to issue one or more requests as a single request/response connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />.</para>
        </summary>
        <remarks>
          <para>
            <computeroutput>
              <see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" />
            </computeroutput> objects are used to issue one or more requests as a single request/response connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />.</para>
          <para>For a single request, the usual method for creating an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> object is to call one of the **start* ** methods on &lt;FBRequest&gt;. However, it is allowable to init an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> object directly, and call &lt;addRequest:completionHandler:&gt; to add one or more request objects to the connection, before calling start.</para>
          <para>Note that if requests are part of a batch, they must have an open <see cref="T:MonoTouch.FacebookConnect.FBSession" /> that has an access token associated with it. Alternatively a default App ID must be set either in the plist or through an explicit call to &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> defaultAppID]&gt;.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FBRequestConnection (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRequest">
      <MemberSignature Language="C#" Value="public virtual void AddRequest (MonoTouch.FacebookConnect.FBRequest request, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRequest(class MonoTouch.FacebookConnect.FBRequest request, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("addRequest:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.FacebookConnect.FBRequest" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="request">A request to be included in the round-trip when start is called. </param>
        <param name="handler">A handler to call back when the round-trip completes or times out. </param>
        <summary>
          <para>Adding requests</para>
        </summary>
        <remarks>
          <para>Adding requests</para>
          <para>This method adds an &lt;FBRequest&gt; object to this connection and then calls &lt;start&gt; on the connection.</para>
          <para>The completion handler is retained until the block is called upon the completion or cancellation of the connection.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRequest">
      <MemberSignature Language="C#" Value="public virtual void AddRequest (MonoTouch.FacebookConnect.FBRequest request, MonoTouch.FacebookConnect.FBRequestHandler handler, string batchEntryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRequest(class MonoTouch.FacebookConnect.FBRequest request, class MonoTouch.FacebookConnect.FBRequestHandler handler, string batchEntryName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("addRequest:completionHandler:batchEntryName:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="MonoTouch.FacebookConnect.FBRequest" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
        <Parameter Name="batchEntryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="request">A request to be included in the round-trip when start is called.</param>
        <param name="handler">A handler to call back when the round-trip completes or times out.</param>
        <param name="batchEntryName">An optional name for this request. This can be used to feed the results of one request to the input of another &lt;FBRequest&gt; in the same  as described in Graph API Batch Requests. </param>
        <param name="name">An optional name for this request. This can be used to feed the results of one request to the input of another &lt;FBRequest&gt; in the same  as described in Graph API Batch Requests. </param>
        <summary>
          <para>This method adds an &lt;FBRequest&gt; object to this connection and then calls &lt;start&gt; on the connection.</para>
        </summary>
        <remarks>
          <para>This method adds an &lt;FBRequest&gt; object to this connection and then calls &lt;start&gt; on the connection.</para>
          <para>The completion handler is retained until the block is called upon the completion or cancellation of the connection. This request can be named to allow for using the request's response in a subsequent request.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cancel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Signals that a connection should be logically terminated as the application is no longer interested in a response.</para>
        </summary>
        <remarks>
          <para>Signals that a connection should be logically terminated as the application is no longer interested in a response.</para>
          <para>Synchronously calls any handlers indicating the request was cancelled. Cancel does not guarantee that the request-related processing will cease. It does promise that all handlers will complete before the cancel returns. A call to cancel prior to a start implies a cancellation of all requests associated with the connection. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonJSONResponseProperty">
      <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString NonJSONResponseProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.Foundation.NSString NonJSONResponseProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("start")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Instance methods</para>
        </summary>
        <remarks>
          <para>Instance methods</para>
          <para>This method starts a connection with the server and is capable of handling all of the requests that were added to the connection.</para>
          <para>Errors are reported via the handler callback, even in cases where no communication is attempted by the implementation of <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput>. In such cases multiple error conditions may apply, and if so the following priority (highest to lowest) is used:</para>
          <para>
            <list type="bullet">
              <item>
                <description>FBRequestConnectionInvalidRequestKey this error is reported when an &lt;FBRequest&gt; cannot be encoded for transmission.</description>
              </item>
            </list>
          </para>
          <para>
            <list type="bullet">
              <item>
                <description>FBRequestConnectionInvalidBatchKey this error is reported when any request in the connection cannot be encoded for transmission with the batch. In this scenario all requests fail.</description>
              </item>
            </list>
          </para>
          <para>This method cannot be called twice for an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> instance. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForCustomAudienceThirdPartyID">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForCustomAudienceThirdPartyID (MonoTouch.FacebookConnect.FBSession session, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForCustomAudienceThirdPartyID(class MonoTouch.FacebookConnect.FBSession session, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForCustomAudienceThirdPartyID:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="MonoTouch.FacebookConnect.FBSession" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="session">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <param name="handler">To be added.</param>
        <summary>
          <para>Starts a request representing the Graph API call to retrieve a Custom Audience "third party ID" for the app's <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user. Callers will send this ID back to their own servers, collect up a set to create a <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Custom Audience with, and then use the resultant Custom Audience to target ads.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Starts a request representing the Graph API call to retrieve a Custom Audience "third party ID" for the app's <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user. Callers will send this ID back to their own servers, collect up a set to create a <see cref="T:MonoTouch.FacebookConnect.Facebook" /> Custom Audience with, and then use the resultant Custom Audience to target ads.</para>
          <para>
This method will thrown an exception if either &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> defaultAppID]&gt; or &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> clientToken]&gt; are <computeroutput>nil</computeroutput>. The appID won't be nil when the pList includes the appID, or if it's explicitly set. The clientToken needs to be set via &lt;[<see cref="T:MonoTouch.FacebookConnect.FBSettings" /> setClientToken:]&gt;.</para>
          <para>The JSON in the request's response will include an "custom_audience_third_party_id" key/value pair, with the value being the ID retrieved. This ID is an encrypted encoding of the <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user's ID and the invoking <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app ID. Multiple calls with the same user will return different IDs, thus these IDs cannot be used to correlate behavior across devices or applications, and are only meaningful when sent back to <see cref="T:MonoTouch.FacebookConnect.Facebook" /> for creating Custom Audiences.</para>
          <para>The ID retrieved represents the <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user identified in the following way: if the specified session (or activeSession if the specified session is <computeroutput>nil</computeroutput>) is open, the ID will represent the user associated with the activeSession; otherwise the ID will represent the user logged into the native <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app on the device. If there is no native <see cref="T:MonoTouch.FacebookConnect.Facebook" /> app, no one is logged into it, or the user has opted out at the iOS level from ad tracking, then a <computeroutput>nil</computeroutput> ID will be returned.</para>
          <para>This method itself returning <computeroutput>nil</computeroutput> indicates that either the user has opted-out (via iOS) from Ad Tracking, or a specific <see cref="T:MonoTouch.FacebookConnect.Facebook" /> user cannot be identified.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForDeleteObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForDeleteObject (MonoTouch.Foundation.NSObject aObject, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForDeleteObject(class MonoTouch.Foundation.NSObject aObject, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForDeleteObject:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="aObject">The object to delete, may be an NSString or NSNumber representing an fbid or an NSDictionary with an id property </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to delete an object using the graph API, creates an &lt;FBRequest&gt; object for HTTP DELETE, then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to delete an object using the graph API, creates an &lt;FBRequest&gt; object for HTTP DELETE, then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForMeWithCompletionHandler">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForMeWithCompletionHandler (MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForMeWithCompletionHandler(class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForMeWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API request for user info (/me), creates an &lt;FBRequest&gt; then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API request for user info (/me), creates an &lt;FBRequest&gt; then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para>See &lt;connectionWithSession:graphPath:parameters:HTTPMethod:completionHandler:&gt;</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForMyFriendsWithCompletionHandler">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForMyFriendsWithCompletionHandler (MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForMyFriendsWithCompletionHandler(class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForMyFriendsWithCompletionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API request for user friends (/me/friends), creates an &lt;FBRequest&gt; then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API request for user friends (/me/friends), creates an &lt;FBRequest&gt; then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para>See &lt;connectionWithSession:graphPath:parameters:HTTPMethod:completionHandler:&gt;</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPlacesSearchAtCoordinate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForPlacesSearchAtCoordinate (MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate, int radius, int limit, string searchText, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForPlacesSearchAtCoordinate(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate, int32 radius, int32 limit, string searchText, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
        <Parameter Name="radius" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="searchText" Type="System.String" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="coordinate">The search coordinates.</param>
        <param name="radius">The search radius in meters.</param>
        <param name="limit">The maxiumum number of results to return. It is possible to receive fewer than this because of the radius and because of server limits.</param>
        <param name="searchText">The text to use in the query to narrow the set of places returned. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Starts a request representing a Graph API call to the "search" endpoint for a given location using the active session.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Starts a request representing a Graph API call to the "search" endpoint for a given location using the active session.</para>
          <para>Simplifies starting a request to search for places near a coordinate.</para>
          <para>This method creates the necessary &lt;FBRequest&gt; object and initializes and starts an &lt;FBRequestConnection&gt; object. A successful Graph API call will return an array of &lt;FBGraphPlace&gt; objects representing the nearby locations.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPostOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForPostOpenGraphObject (MonoTouch.FacebookConnect.FBOpenGraphObject aObject, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForPostOpenGraphObject(class MonoTouch.FacebookConnect.FBOpenGraphObject aObject, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPostOpenGraphObject:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.FacebookConnect.FBOpenGraphObject" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="aObject">The Open Graph object to create. Some common expected fields include "title", "image", "url", etc.</param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for creating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for creating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPostOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest StartForPostOpenGraphObject (string aType, string title, MonoTouch.Foundation.NSObject image, MonoTouch.Foundation.NSObject url, string description, MonoTouch.Foundation.NSDictionary objectProperties, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest StartForPostOpenGraphObject(string aType, string title, class MonoTouch.Foundation.NSObject image, class MonoTouch.Foundation.NSObject url, string description, class MonoTouch.Foundation.NSDictionary objectProperties, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPostOpenGraphObjectWithType:title:image:url:description:objectProperties:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="objectProperties" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="aType">The fully-specified Open Graph object type (e.g., my_app_namespace:my_object_name) </param>
        <param name="title">The title of the Open Graph object. </param>
        <param name="image">The link to an image to be associated with the Open Graph object. </param>
        <param name="url">The url to be associated with the Open Graph object. </param>
        <param name="description">The description for the object. </param>
        <param name="objectProperties">Any additional properties for the Open Graph object. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for creating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for creating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPostStatusUpdate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForPostStatusUpdate (string message, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForPostStatusUpdate(string message, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPostStatusUpdate:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="message">The message to post. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API post of a status update. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API post of a status update. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPostStatusUpdate">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForPostStatusUpdate (string message, MonoTouch.Foundation.NSObject place, MonoTouch.Foundation.NSObject[] tags, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForPostStatusUpdate(string message, class MonoTouch.Foundation.NSObject place, class MonoTouch.Foundation.NSObject[] tags, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPostStatusUpdate:place:tags:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="place" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="tags" Type="MonoTouch.Foundation.NSObject[]" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="message">The message to post. </param>
        <param name="place">The place to checkin with, or nil. Place may be an fbid or a graph object representing a place. </param>
        <param name="tags">Array of friends to tag in the status update, each element may be an fbid or a graph object representing a user. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API post of a status update. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API post of a status update. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForPostWithGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForPostWithGraphPath (string graphPath, MonoTouch.FacebookConnect.FBGraphObject graphObject, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForPostWithGraphPath(string graphPath, class MonoTouch.FacebookConnect.FBGraphObject graphObject, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForPostWithGraphPath:graphObject:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="graphObject" Type="MonoTouch.FacebookConnect.FBGraphObject" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="graphObject">An object or open graph action to post.</param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to post an object using the graph API, creates an &lt;FBRequest&gt; object for HTTP POST, then uses &lt;FBRequestConnection&gt; to start a connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to post an object using the graph API, creates an &lt;FBRequest&gt; object for HTTP POST, then uses &lt;FBRequestConnection&gt; to start a connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForUpdateOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest StartForUpdateOpenGraphObject (MonoTouch.FacebookConnect.FBOpenGraphObject aObject, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest StartForUpdateOpenGraphObject(class MonoTouch.FacebookConnect.FBOpenGraphObject aObject, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForUpdateOpenGraphObject:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aObject" Type="MonoTouch.FacebookConnect.FBOpenGraphObject" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="aObject">The Open Graph object to update the existing object with.</param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for updating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for updating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForUpdateOpenGraphObject">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest StartForUpdateOpenGraphObject (MonoTouch.Foundation.NSObject objectId, string title, MonoTouch.Foundation.NSObject image, MonoTouch.Foundation.NSObject url, string description, MonoTouch.Foundation.NSDictionary objectProperties, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest StartForUpdateOpenGraphObject(class MonoTouch.Foundation.NSObject objectId, string title, class MonoTouch.Foundation.NSObject image, class MonoTouch.Foundation.NSObject url, string description, class MonoTouch.Foundation.NSDictionary objectProperties, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForUpdateOpenGraphObjectWithId:title:image:url:description:objectProperties:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="image" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="url" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="objectProperties" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="objectId">The id of the Open Graph object to update. </param>
        <param name="title">The updated title of the Open Graph object. </param>
        <param name="image">The updated link to an image to be associated with the Open Graph object. </param>
        <param name="url">The updated url to be associated with the Open Graph object. </param>
        <param name="description">The object's description. </param>
        <param name="objectProperties">Any additional properties to update for the Open Graph object. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for updating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> for updating a user owned Open Graph object, instantiate a &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForUploadPhoto">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartForUploadPhoto (MonoTouch.UIKit.UIImage photo, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartForUploadPhoto(class MonoTouch.UIKit.UIImage photo, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForUploadPhoto:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="photo" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="photo">A UIImage for the photo to upload. </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API post of a photo. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API post of a photo. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartForUploadStagingResource">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequest StartForUploadStagingResource (MonoTouch.UIKit.UIImage image, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequest StartForUploadStagingResource(class MonoTouch.UIKit.UIImage image, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startForUploadStagingResourceWithImage:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="image">A UIImage for the image to upload. </param>
        <param name="handler">The handler block to call when the request completes. </param>
        <summary>
          <para>Starts a request connection to upload an image to create a staging resource. Staging resources allow you to post binary data such as images, in preparation for a post of an open graph object or action which references the image. The URI returned when uploading a staging resource may be passed as the value for the image property of an open graph object or action.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Starts a request connection to upload an image to create a staging resource. Staging resources allow you to post binary data such as images, in preparation for a post of an open graph object or action which references the image. The URI returned when uploading a staging resource may be passed as the value for the image property of an open graph object or action.</para>
          <para>This method simplifies the preparation of a Graph API call be creating the <see cref="T:MonoTouch.FacebookConnect.FBRequest" /> object and starting the request connection with a single method</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWithGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartWithGraphPath (string graphPath, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartWithGraphPath(string graphPath, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startWithGraphPath:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me". </param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Simple method to make a graph API request, creates an &lt;FBRequest&gt; object for HTTP GET, then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Simple method to make a graph API request, creates an &lt;FBRequest&gt; object for HTTP GET, then uses an &lt;FBRequestConnection&gt; object to start the connection with <see cref="T:MonoTouch.FacebookConnect.Facebook" />. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para>See &lt;connectionWithSession:graphPath:parameters:HTTPMethod:completionHandler:&gt;</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartWithGraphPath">
      <MemberSignature Language="C#" Value="public static MonoTouch.FacebookConnect.FBRequestConnection StartWithGraphPath (string graphPath, MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod, MonoTouch.FacebookConnect.FBRequestHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.FacebookConnect.FBRequestConnection StartWithGraphPath(string graphPath, class MonoTouch.Foundation.NSDictionary parameters, string HTTPMethod, class MonoTouch.FacebookConnect.FBRequestHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startWithGraphPath:parameters:HTTPMethod:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.FacebookConnect.FBRequestConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphPath" Type="System.String" />
        <Parameter Name="parameters" Type="MonoTouch.Foundation.NSDictionary" />
        <Parameter Name="HTTPMethod" Type="System.String" />
        <Parameter Name="handler" Type="MonoTouch.FacebookConnect.FBRequestHandler" />
      </Parameters>
      <Docs>
        <param name="graphPath">The Graph API endpoint to use for the request, for example "me".</param>
        <param name="parameters">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</param>
        <param name="HTTPMethod">The HTTP method to use for the request. A nil value implies a GET.</param>
        <param name="handler">The handler block to call when the request completes with a success, error, or cancel action. </param>
        <summary>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object for a Graph API call, instantiate an &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. Use this method for specifying the request parameters and HTTP Method. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequest" /></computeroutput> object for a Graph API call, instantiate an &lt;FBRequestConnection&gt; object, add the request to the newly created connection and finally start the connection. Use this method for specifying the request parameters and HTTP Method. The request uses the active session represented by <computeroutput>[<see cref="T:MonoTouch.FacebookConnect.FBSession" /> activeSession]</computeroutput>.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlRequest">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSMutableUrlRequest UrlRequest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSMutableUrlRequest UrlRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("urlRequest")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setUrlRequest:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSMutableUrlRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The request that will be sent to the server.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The request that will be sent to the server.</para>
          <para>This property can be used to create a <computeroutput>NSURLRequest</computeroutput> without using <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput> to send that request. It is legal to set this property in which case the provided <computeroutput>NSMutableURLRequest</computeroutput> will be used instead. However, the <computeroutput>NSMutableURLRequest</computeroutput> must result in an appropriate response. Furthermore, once this property has been set, no more &lt;FBRequest&gt; objects can be added to this <computeroutput><see cref="T:MonoTouch.FacebookConnect.FBRequestConnection" /></computeroutput>. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlResponse">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSHttpUrlResponse UrlResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSHttpUrlResponse UrlResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("urlResponse")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSHttpUrlResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The raw response that was returned from the server. (readonly)</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The raw response that was returned from the server. (readonly)</para>
          <para>This property can be used to inspect HTTP headers that were returned from the server.</para>
          <para>The property is nil until the request completes. If there was a response then this property will be non-nil during the FBRequestHandler callback. </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>