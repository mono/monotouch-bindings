<?xml version="1.0" encoding="utf-8"?>
<Type Name="GMSMapView" FullName="GoogleMaps.GMSMapView">
  <TypeSignature Language="C#" Value="public class GMSMapView : MonoTouch.UIKit.UIView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GMSMapView extends MonoTouch.UIKit.UIView" />
  <AssemblyInfo>
    <AssemblyName>GoogleMaps</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.UIKit.UIView</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("GMSMapView", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>A map view. This class should not be instantiated directly, instead it must be created with [<see cref="T:GoogleMaps.GMSServices" /> mapWithFrame:camera:].</para>
    </summary>
    <remarks>
      <para>A map view. This class should not be instantiated directly, instead it must be created with [<see cref="T:GoogleMaps.GMSServices" /> mapWithFrame:camera:].</para>
      <para>
        <see cref="T:GoogleMaps.GMSMapView" /> is not thread safe, and should only be interacted with on the UI thread. This also follows for related objects such as markers and polylines. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSMapView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSMapView (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSMapView (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSMapView (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroundOverlay">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSGroundOverlay AddGroundOverlay (GoogleMaps.GMSGroundOverlayOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class GoogleMaps.GMSGroundOverlay AddGroundOverlay(class GoogleMaps.GMSGroundOverlayOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSGroundOverlay</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="GoogleMaps.GMSGroundOverlayOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMarker">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSMarker AddMarker (GoogleMaps.GMSMarkerOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class GoogleMaps.GMSMarker AddMarker(class GoogleMaps.GMSMarkerOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMarker</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="GoogleMaps.GMSMarkerOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolyline">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSPolyline AddPolyline (GoogleMaps.GMSPolylineOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class GoogleMaps.GMSPolyline AddPolyline(class GoogleMaps.GMSPolylineOptions options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSPolyline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="GoogleMaps.GMSPolylineOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateToBearing">
      <MemberSignature Language="C#" Value="public virtual void AnimateToBearing (double bearing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnimateToBearing(float64 bearing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateToBearing:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bearing" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="bearing">To be added.</param>
        <summary>
          <para>As animateToCamera:, but changes only the bearing of the camera (in degrees). Zero indicates true north. </para>
        </summary>
        <remarks>
          <para>As animateToCamera:, but changes only the bearing of the camera (in degrees). Zero indicates true north. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateToCameraPosition">
      <MemberSignature Language="C#" Value="public virtual void AnimateToCameraPosition (GoogleMaps.GMSCameraPosition cameraPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnimateToCameraPosition(class GoogleMaps.GMSCameraPosition cameraPosition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateToCameraPosition:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cameraPosition" Type="GoogleMaps.GMSCameraPosition" />
      </Parameters>
      <Docs>
        <param name="cameraPosition">To be added.</param>
        <summary>
          <para>Animates the camera of this map to |cameraPosition|. During the animation, retrieving the camera position through the camera property returns an intermediate immutable <see cref="T:GoogleMaps.GMSCameraPosition" />.</para>
        </summary>
        <remarks>
          <para>Animates the camera of this map to |cameraPosition|. During the animation, retrieving the camera position through the camera property returns an intermediate immutable <see cref="T:GoogleMaps.GMSCameraPosition" />.</para>
          <para>The duration of this animation, and those below (animateToLocation:, animateToZoom:, animateToBearing: and animateToViewingAngle:) is controlled by Core Animation. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateToLocation">
      <MemberSignature Language="C#" Value="public virtual void AnimateToLocation (MonoTouch.CoreLocation.CLLocationCoordinate2D location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnimateToLocation(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateToLocation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
      </Parameters>
      <Docs>
        <param name="location">To be added.</param>
        <summary>
          <para>As animateToCamera:, but changes only the location of the camera (i.e., from the current location to |location|). </para>
        </summary>
        <remarks>
          <para>As animateToCamera:, but changes only the location of the camera (i.e., from the current location to |location|). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateToViewingAngle">
      <MemberSignature Language="C#" Value="public virtual void AnimateToViewingAngle (double viewingAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnimateToViewingAngle(float64 viewingAngle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateToViewingAngle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewingAngle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="viewingAngle">To be added.</param>
        <summary>
          <para>As animateToCamera:, but changes only the viewing angle of the camera (in degrees). This value will be clamped to a minimum of zero (i.e., facing straight down) and between 30 and 45 degrees towards the horizon, depending on the relative closeness to the earth. </para>
        </summary>
        <remarks>
          <para>As animateToCamera:, but changes only the viewing angle of the camera (in degrees). This value will be clamped to a minimum of zero (i.e., facing straight down) and between 30 and 45 degrees towards the horizon, depending on the relative closeness to the earth. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnimateToZoom">
      <MemberSignature Language="C#" Value="public virtual void AnimateToZoom (float zoom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnimateToZoom(float32 zoom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("animateToZoom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoom" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="zoom">To be added.</param>
        <summary>
          <para>As animateToCamera:, but changes only the zoom level of the camera. This value is clamped by [kGMSMinZoomLevel, kGMSMaxZoomLevel]. </para>
        </summary>
        <remarks>
          <para>As animateToCamera:, but changes only the zoom level of the camera. This value is clamped by [kGMSMinZoomLevel, kGMSMaxZoomLevel]. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Camera">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSCameraPosition Camera { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSCameraPosition Camera" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("camera")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setCamera:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSCameraPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Controls the camera, which defines how the map is oriented. If this property is explicitly set, the camera is moved immediately, without animation; this will also stop any previous animation. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Controls the camera, which defines how the map is oriented. If this property is explicitly set, the camera is moved immediately, without animation; this will also stop any previous animation. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedCameraPosition">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;GoogleMaps.GMSCameraEventArgs&gt; ChangedCameraPosition;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class GoogleMaps.GMSCameraEventArgs&gt; ChangedCameraPosition" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;GoogleMaps.GMSCameraEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("clear")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Clears all markup that has been added to the map, including markers, polylines and ground overlays. This will not clear the visible location dot or reset the current mapType. </para>
        </summary>
        <remarks>
          <para>Clears all markup that has been added to the map, including markers, polylines and ground overlays. This will not clear the visible location dot or reset the current mapType. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSMapViewDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSMapViewDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMapViewDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromCamera">
      <MemberSignature Language="C#" Value="public static GoogleMaps.GMSMapView FromCamera (System.Drawing.RectangleF frame, GoogleMaps.GMSCameraPosition camera);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GoogleMaps.GMSMapView FromCamera(valuetype System.Drawing.RectangleF frame, class GoogleMaps.GMSCameraPosition camera) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("mapWithFrame:camera:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMapView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frame" Type="System.Drawing.RectangleF" />
        <Parameter Name="camera" Type="GoogleMaps.GMSCameraPosition" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <param name="camera">To be added.</param>
        <summary>
          <para>Builds and returns a <see cref="T:GoogleMaps.GMSMapView" />, with a frame and camera target. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Builds and returns a <see cref="T:GoogleMaps.GMSMapView" />, with a frame and camera target. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroundOverlays">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSGroundOverlay[] GroundOverlays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSGroundOverlay[] GroundOverlays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("groundOverlays")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSGroundOverlay[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets a list of all ground overlays.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets a list of all ground overlays.</para>
          <para>
            <para>A NSArray of the id&lt;GMSGroundOverlay&gt; instances currently on the map. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoFor">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSInfoFor InfoFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSInfoFor InfoFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSInfoFor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LongPress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;GoogleMaps.GMSCoordEventArgs&gt; LongPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class GoogleMaps.GMSCoordEventArgs&gt; LongPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;GoogleMaps.GMSCoordEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSMapViewType MapType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype GoogleMaps.GMSMapViewType MapType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("mapType", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setMapType:", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMapViewType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Markers">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSMarker[] Markers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSMarker[] Markers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("markers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMarker[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets a list of all makers.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets a list of all makers.</para>
          <para>
            <para>A NSArray of the id&lt;GMSMarker&gt; instances currently on the map. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MyLocation">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreLocation.CLLocation MyLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreLocation.CLLocation MyLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("myLocation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreLocation.CLLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If My Location is enabled, reveals where the user location dot is being drawn. If it is disabled, or it is enabled but no location data is available, this will be nil. This property is observable using KVO. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>If My Location is enabled, reveals where the user location dot is being drawn. If it is disabled, or it is enabled but no location data is available, this will be nil. This property is observable using KVO. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MyLocationEnabled">
      <MemberSignature Language="C#" Value="public virtual bool MyLocationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MyLocationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("isMyLocationEnabled", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setMyLocationEnabled:", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Polylines">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSPolyline[] Polylines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSPolyline[] Polylines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("polylines")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSPolyline[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets a list of all polylines.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets a list of all polylines.</para>
          <para>
            <para>A NSArray of the id&lt;GMSPolyline&gt; instances currently on the map. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Projection">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSProjection Projection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSProjection Projection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("projection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSProjection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The <see cref="T:GoogleMaps.GMSProjection" /> currently used by this <see cref="T:GoogleMaps.GMSMapView" />. This is a snapshot of the current projection, and will not automatically update when the camera moves. The projection may be nil while the render is not running (if the map is not yet part of your UI, or is part of a hidden UIViewController, or you have called stopRendering). </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The <see cref="T:GoogleMaps.GMSProjection" /> currently used by this <see cref="T:GoogleMaps.GMSMapView" />. This is a snapshot of the current projection, and will not automatically update when the camera moves. The projection may be nil while the render is not running (if the map is not yet part of your UI, or is part of a hidden UIViewController, or you have called stopRendering). </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedMarker">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSMarker SelectedMarker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSMarker SelectedMarker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("selectedMarker")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setSelectedMarker:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSMarker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The marker that is selected. Setting this property selects a particular marker, showing an info window on it. If this property is non-nil, setting it to nil deselects the marker, hiding the info window. This property is observable using KVO. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>The marker that is selected. Setting this property selects a particular marker, showing an info window on it. If this property is non-nil, setting it to nil deselects the marker, hiding the info window. This property is observable using KVO. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSUISettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSUISettings Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("settings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSUISettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Gets the <see cref="T:GoogleMaps.GMSUISettings" /> object, which controls user interface settings for the map. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the <see cref="T:GoogleMaps.GMSUISettings" /> object, which controls user interface settings for the map. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRendering">
      <MemberSignature Language="C#" Value="public virtual void StartRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRendering() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("startRendering")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Tells this map to power up its renderer. This is optional- <see cref="T:GoogleMaps.GMSMapView" /> will automatically invoke this method when added to a window. It is safe to call this method more than once. </para>
        </summary>
        <remarks>
          <para>Tells this map to power up its renderer. This is optional- <see cref="T:GoogleMaps.GMSMapView" /> will automatically invoke this method when added to a window. It is safe to call this method more than once. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRendering">
      <MemberSignature Language="C#" Value="public virtual void StopRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopRendering() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("stopRendering")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Tells this map to power down its renderer, releasing its resources. This is optional- <see cref="T:GoogleMaps.GMSMapView" /> will automatically invoke this method when removed from a window. It is safe to call this method more than once. </para>
        </summary>
        <remarks>
          <para>Tells this map to power down its renderer, releasing its resources. This is optional- <see cref="T:GoogleMaps.GMSMapView" /> will automatically invoke this method when removed from a window. It is safe to call this method more than once. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TapedInfo">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;GoogleMaps.GMSMarkerEventEventArgs&gt; TapedInfo;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class GoogleMaps.GMSMarkerEventEventArgs&gt; TapedInfo" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;GoogleMaps.GMSMarkerEventEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tapped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;GoogleMaps.GMSCoordEventArgs&gt; Tapped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class GoogleMaps.GMSCoordEventArgs&gt; Tapped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;GoogleMaps.GMSCoordEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TappedMarker">
      <MemberSignature Language="C#" Value="public GoogleMaps.GMSTappedMarker TappedMarker { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class GoogleMaps.GMSTappedMarker TappedMarker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSTappedMarker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrafficEnabled">
      <MemberSignature Language="C#" Value="public virtual bool TrafficEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrafficEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("isTrafficEnabled", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTrafficEnabled:", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("delegate", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDelegate:", MonoTouch.ObjCRuntime.ArgumentSemantic.Assign)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>