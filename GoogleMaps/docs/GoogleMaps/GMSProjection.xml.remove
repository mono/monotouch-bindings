<?xml version="1.0" encoding="utf-8"?>
<Type Name="GMSProjection" FullName="GoogleMaps.GMSProjection">
  <TypeSignature Language="C#" Value="public class GMSProjection : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GMSProjection extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>GoogleMaps</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("GMSProjection", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines a mapping between Earth coordinates (CLLocationCoordinate2D) and coordinates in the map's view (CGPoint). A projection is constant and immutable, in that the mapping it embodies never changes. The mapping is not necessarily linear.</para>
    </summary>
    <remarks>
      <para>Defines a mapping between Earth coordinates (CLLocationCoordinate2D) and coordinates in the map's view (CGPoint). A projection is constant and immutable, in that the mapping it embodies never changes. The mapping is not necessarily linear.</para>
      <para>This class should not be instantiated directly, instead, obtained via projection on <see cref="T:GoogleMaps.GMSMapView" />. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSProjection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSProjection (MonoTouch.Foundation.NSCoder coder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSCoder coder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithCoder:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
      </Parameters>
      <Docs>
        <param name="coder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSProjection (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GMSProjection (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsCoordinate">
      <MemberSignature Language="C#" Value="public virtual bool ContainsCoordinate (MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsCoordinate(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("containsCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
      </Parameters>
      <Docs>
        <param name="coordinate">To be added.</param>
        <summary>
          <para>Returns whether a given coordinate (lat/lng) is contained within the projection. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns whether a given coordinate (lat/lng) is contained within the projection. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoordinateForPoint">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreLocation.CLLocationCoordinate2D CoordinateForPoint (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D CoordinateForPoint(valuetype System.Drawing.PointF point) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("coordinateForPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreLocation.CLLocationCoordinate2D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <summary>
          <para>Maps a point coordinate in the map's view to an Earth coordinate. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Maps a point coordinate in the map's view to an Earth coordinate. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointForCoordinate">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF PointForCoordinate (MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF PointForCoordinate(valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointForCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
      </Parameters>
      <Docs>
        <param name="coordinate">To be added.</param>
        <summary>
          <para>Maps an Earth coordinate to a point coordinate in the map's view. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Maps an Earth coordinate to a point coordinate in the map's view. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointsForMeters">
      <MemberSignature Language="C#" Value="public virtual float PointsForMeters (float meters, MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 PointsForMeters(float32 meters, valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D coordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointsForMeters:atCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meters" Type="System.Single" />
        <Parameter Name="coordinate" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
      </Parameters>
      <Docs>
        <param name="meters">To be added.</param>
        <param name="coordinate">To be added.</param>
        <summary>
          <para>Converts a distance in meters to content size. This is only accurate for small Earth distances, as we're using CGFloat for screen distances. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Converts a distance in meters to content size. This is only accurate for small Earth distances, as we're using CGFloat for screen distances. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleRegion">
      <MemberSignature Language="C#" Value="public virtual GoogleMaps.GMSVisibleRegion VisibleRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype GoogleMaps.GMSVisibleRegion VisibleRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("visibleRegion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>GoogleMaps.GMSVisibleRegion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Returns the region (four location coordinates) that is visible according to the projection.</para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the region (four location coordinates) that is visible according to the projection.</para>
          <para>The visible region can be non-rectangular. The result is undefined if the projection includes points that do not map to anywhere on the map (e.g., camera sees outer space). </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>