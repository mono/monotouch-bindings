<Type Name="CPTPlot" FullName="CorePlot.CPTPlot">
  <TypeSignature Language="C#" Value="public class CPTPlot : CorePlot.CPTAnnotationHostLayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPTPlot extends CorePlot.CPTAnnotationHostLayer" />
  <AssemblyInfo>
    <AssemblyName>CorePlotiOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CorePlot.CPTAnnotationHostLayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CPTPlot", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>An abstract plot class. </para>
    </summary>
    <remarks>
      <para>Each data series on the graph is represented by a plot. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlot (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlot (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedDataCount">
      <MemberSignature Language="C#" Value="public virtual int CachedDataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CachedDataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("cachedDataCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The number of data points stored in the cache. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedDecimalForField">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDecimal CachedDecimalForField (CorePlot.CPTPlotField forFieldEnum, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MonoTouch.Foundation.NSDecimal CachedDecimalForField(valuetype CorePlot.CPTPlotField forFieldEnum, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cachedDecimalForField:recordIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <param name="index">The index of the desired data value. </param>
        <summary>
          <para>Retrieves a single number from the cache. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The cached number or NAN if no data is cached for the requested field. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedDoubleForField">
      <MemberSignature Language="C#" Value="public virtual double CachedDoubleForField (CorePlot.CPTPlotField forFieldEnum, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 CachedDoubleForField(valuetype CorePlot.CPTPlotField forFieldEnum, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cachedDoubleForField:recordIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <param name="index">The index of the desired data value. </param>
        <summary>
          <para>Retrieves a single number from the cache. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The cached number or NAN if no data is cached for the requested field. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedNumberForField">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSNumber CachedNumberForField (CorePlot.CPTPlotField forFieldEnum, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSNumber CachedNumberForField(valuetype CorePlot.CPTPlotField forFieldEnum, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cachedNumberForField:recordIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <param name="index">The index of the desired data value. </param>
        <summary>
          <para>Retrieves a single number from the cache. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The cached number. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedNumbersForField">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTMutableNumericData CachedNumbersForField (CorePlot.CPTPlotField forFieldEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CorePlot.CPTMutableNumericData CachedNumbersForField(valuetype CorePlot.CPTPlotField forFieldEnum) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cachedNumbersForField:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTMutableNumericData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <summary>
          <para>Retrieves an array of numbers from the cache. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The array of cached numbers. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheNumbers">
      <MemberSignature Language="C#" Value="public virtual void CacheNumbers (MonoTouch.Foundation.NSObject numbers, CorePlot.CPTPlotField forFieldEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CacheNumbers(class MonoTouch.Foundation.NSObject numbers, valuetype CorePlot.CPTPlotField forFieldEnum) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cacheNumbers:forField:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numbers" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
      </Parameters>
      <Docs>
        <param name="numbers">An array of numbers to cache. Can be a , NSArray, or NSData (NSData is assumed to be a c-style array of type double). </param>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <summary>
          <para>Copies an array of numbers to the cache. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheNumbers">
      <MemberSignature Language="C#" Value="public virtual void CacheNumbers (MonoTouch.Foundation.NSObject numbers, CorePlot.CPTPlotField forFieldEnum, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CacheNumbers(class MonoTouch.Foundation.NSObject numbers, valuetype CorePlot.CPTPlotField forFieldEnum, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("cacheNumbers:forField:atRecordIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numbers" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numbers">An array of numbers to cache. Can be a , NSArray, or NSData (NSData is assumed to be a c-style array of type double). </param>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <param name="index">The index of the first data point to replace. </param>
        <summary>
          <para>Copies an array of numbers to replace a part of the cache. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePrecision">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotCachePrecision CachePrecision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CorePlot.CPTPlotCachePrecision CachePrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("cachePrecision")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setCachePrecision:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotCachePrecision</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The numeric precision used to cache the plot data and perform all plot calculations. Defaults to CPTPlotCachePrecisionAuto. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNeedsReloading">
      <MemberSignature Language="C#" Value="public virtual bool DataNeedsReloading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataNeedsReloading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("dataNeedsReloading")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If YES, the plot data will be reloaded from the data source before the layer content is drawn. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotDataSource DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTPlotDataSource DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("dataSource")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDataSource:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The data source for the plot. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecimalDataType">
      <MemberSignature Language="C#" Value="public virtual IntPtr DecimalDataType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int DecimalDataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("decimalDataType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The CPTNumericDataType used to cache plot data as NSDecimal. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteData">
      <MemberSignature Language="C#" Value="public virtual void DeleteData (MonoTouch.Foundation.NSRange indexRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteData(valuetype MonoTouch.Foundation.NSRange indexRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("deleteDataInIndexRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="indexRange">The index range of the data records to remove. </param>
        <summary>
          <para>Delete records in the given index range from the plot data cache. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleDataType">
      <MemberSignature Language="C#" Value="public virtual IntPtr DoubleDataType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int DoubleDataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("doubleDataType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The CPTNumericDataType used to cache plot data as <computeroutput>double</computeroutput>. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoublePrecisionCache">
      <MemberSignature Language="C#" Value="public virtual bool DoublePrecisionCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoublePrecisionCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("doublePrecisionCache")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If YES, the cache holds data of type 'double', otherwise it holds NSNumber. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawSwatch">
      <MemberSignature Language="C#" Value="public virtual void DrawSwatch (CorePlot.CPTLegend legent, int index, System.Drawing.RectangleF rect, MonoTouch.CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawSwatch(class CorePlot.CPTLegend legent, int32 index, valuetype System.Drawing.RectangleF rect, class MonoTouch.CoreGraphics.CGContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("drawSwatchForLegend:atIndex:inRect:inContext:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="legent" Type="CorePlot.CPTLegend" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="legent">The legend being drawn. </param>
        <param name="index">The index of the desired swatch. </param>
        <param name="rect">The bounding rectangle where the swatch should be drawn. </param>
        <param name="context">The graphics context to draw into. </param>
        <summary>
          <para>Draws the legend swatch of a legend entry. Subclasses should call super to draw the background fill and border. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldIdentifiers">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject[] FieldIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject[] FieldIdentifiers() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("fieldIdentifiers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Identifiers (enum values) identifying the fields. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>Array of NSNumbers for the various field identifiers. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldIdentifiersForCoordinate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject[] FieldIdentifiersForCoordinate (CorePlot.CPTCoordinate coord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject[] FieldIdentifiersForCoordinate(valuetype CorePlot.CPTCoordinate coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("fieldIdentifiersForCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="coord">The coordinate for which the corresponding field identifiers are desired. </param>
        <summary>
          <para>The field identifiers that correspond to a particular coordinate. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>Array of NSNumbers for the field identifiers. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTitleForLegendEntry">
      <MemberSignature Language="C#" Value="public virtual string GetTitleForLegendEntry (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTitleForLegendEntry(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("titleForLegendEntryAtIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the desired title. </param>
        <summary>
          <para>The title text of a legend entry. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The title of the legend entry at the requested index. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject Identifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("identifier")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setIdentifier:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>An object used to identify the plot in collections. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertData">
      <MemberSignature Language="C#" Value="public virtual void InsertData (int index, int numberOfRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertData(int32 index, int32 numberOfRecords) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("insertDataAtIndex:numberOfRecords:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="numberOfRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The starting index of the new records. </param>
        <param name="numberOfRecords">The number of records to insert. </param>
        <summary>
          <para>Insert records into the plot data cache at the given index. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelField">
      <MemberSignature Language="C#" Value="public virtual int LabelField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("labelField")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLabelField:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The plot field identifier of the data field used to generate automatic labels. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelFormatter">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject LabelFormatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject LabelFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("labelFormatter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLabelFormatter:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The number formatter used to format the data labels. Set this property to <computeroutput>nil</computeroutput> to hide the data labels. If you need a non-numerical label, such as a date, you can use a formatter than turns the numerical plot coordinate into a string (e.g., "Jan 10, 2010"). The <see cref="T:CorePlot.CPTTimeFormatter" /> is useful for this purpose. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelOffset">
      <MemberSignature Language="C#" Value="public virtual float LabelOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LabelOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("labelOffset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLabelOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The distance that labels should be offset from their anchor points. The direction of the offset is defined by subclasses. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelRotation">
      <MemberSignature Language="C#" Value="public virtual float LabelRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LabelRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("labelRotation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLabelRotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The rotation of the data labels in radians. Set this property to <computeroutput>M_PI/2.0</computeroutput> to have labels read up the screen, for example. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelTextStyle">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTMutableTextStyle LabelTextStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTMutableTextStyle LabelTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("labelTextStyle")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLabelTextStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTMutableTextStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The text style used to draw the data labels. Set this property to <computeroutput>nil</computeroutput> to hide the data labels. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedsRelabel">
      <MemberSignature Language="C#" Value="public virtual bool NeedsRelabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedsRelabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("needsRelabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If YES, the plot needs to be relabeled before the layer content is drawn. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfFields">
      <MemberSignature Language="C#" Value="public virtual int NumberOfFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("numberOfFields")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Number of fields in a plot data record. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <para>The number of fields. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfLegendEntries">
      <MemberSignature Language="C#" Value="public virtual int NumberOfLegendEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfLegendEntries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("numberOfLegendEntries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The number of legend entries provided by this plot. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <para>The number of legend entries. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumbersFromDataSource">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject NumbersFromDataSource (CorePlot.CPTPlotField forFieldEnum, MonoTouch.Foundation.NSRange indexRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSObject NumbersFromDataSource(valuetype CorePlot.CPTPlotField forFieldEnum, valuetype MonoTouch.Foundation.NSRange indexRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("numbersFromDataSourceForField:recordIndexRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
        <Parameter Name="indexRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field index. </param>
        <param name="indexRange">The range of the data indexes of interest. </param>
        <summary>
          <para>Gets a range of plot data for the given plot and field. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>An array of data points. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotArea">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotArea PlotArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTPlotArea PlotArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("plotArea")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The plot area for the plot. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotRangeForCoordinate">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotRange PlotRangeForCoordinate (CorePlot.CPTCoordinate coord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CorePlot.CPTPlotRange PlotRangeForCoordinate(valuetype CorePlot.CPTCoordinate coord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotRangeForCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coord" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="coord">The coordinate identifier. </param>
        <summary>
          <para>Determines the smallest plot range that fully encloses the data for a particular coordinate. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The plot range enclosing the data. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotRangeForField">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotRange PlotRangeForField (CorePlot.CPTPlotField forFieldEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CorePlot.CPTPlotRange PlotRangeForField(valuetype CorePlot.CPTPlotField forFieldEnum) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotRangeForField:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forFieldEnum" Type="CorePlot.CPTPlotField" />
      </Parameters>
      <Docs>
        <param name="forFieldEnum">The field enumerator identifying the field. </param>
        <summary>
          <para>Determines the smallest plot range that fully encloses the data for a particular field. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The plot range enclosing the data. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotSpace">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotSpace PlotSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTPlotSpace PlotSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("plotSpace")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setPlotSpace:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The plot space for the plot. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionLabelAnnotationforIndex">
      <MemberSignature Language="C#" Value="public virtual void PositionLabelAnnotationforIndex (CorePlot.CPTPlotSpaceAnnotation label, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PositionLabelAnnotationforIndex(class CorePlot.CPTPlotSpaceAnnotation label, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("positionLabelAnnotation:forIndex:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="CorePlot.CPTPlotSpaceAnnotation" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="label">The annotation for the data label. </param>
        <param name="index">The data index for the label. </param>
        <summary>
          <para>Adjusts the position of the data label annotation for the plot point at the given index. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relabel">
      <MemberSignature Language="C#" Value="public virtual void Relabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Relabel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("relabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Updates the data labels. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelabelIndexRange">
      <MemberSignature Language="C#" Value="public virtual void RelabelIndexRange (MonoTouch.Foundation.NSRange indexRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelabelIndexRange(valuetype MonoTouch.Foundation.NSRange indexRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("relabelIndexRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="indexRange">The new indexRange for the labels.</param>
        <summary>
          <para>Sets the labelIndexRange and informs the receiver that it needs to relabel. </para>
        </summary>
        <remarks>
          <para>
            <xrefsect id="todo_1_todo000010">
              <xreftitle>Todo</xreftitle>
              <xrefdescription>
                <para>Needs more documentation. </para>
              </xrefdescription>
            </xrefsect>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadData">
      <MemberSignature Language="C#" Value="public virtual void ReloadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("reloadData")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Reload all plot data from the data source immediately. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadDataIfNeeded">
      <MemberSignature Language="C#" Value="public virtual void ReloadDataIfNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadDataIfNeeded() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("reloadDataIfNeeded")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Reload plot data from the data source only if the data cache is out of date. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadDataInIndexRange">
      <MemberSignature Language="C#" Value="public virtual void ReloadDataInIndexRange (MonoTouch.Foundation.NSRange indexRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadDataInIndexRange(valuetype MonoTouch.Foundation.NSRange indexRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("reloadDataInIndexRange:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="indexRange">The index range to load. </param>
        <summary>
          <para>Reload plot data in the given index range from the data source immediately. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataNeedsReloading">
      <MemberSignature Language="C#" Value="public virtual void SetDataNeedsReloading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataNeedsReloading() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setDataNeedsReloading")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Marks the receiver as needing the data source reloaded before the content is next drawn. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNeedsRelabel">
      <MemberSignature Language="C#" Value="public virtual void SetNeedsRelabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNeedsRelabel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setNeedsRelabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Marks the receiver as needing to update the labels before the content is next drawn. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("title")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTitle:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The title of the plot displayed in the legend. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
