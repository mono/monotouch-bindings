<Type Name="CPTLayer" FullName="CorePlot.CPTLayer">
  <TypeSignature Language="C#" Value="public class CPTLayer : MonoTouch.CoreAnimation.CALayer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPTLayer extends MonoTouch.CoreAnimation.CALayer" />
  <AssemblyInfo>
    <AssemblyName>CorePlotiOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.CoreAnimation.CALayer</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CPTLayer", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Base class for all Core Animation layers in Core Plot. </para>
    </summary>
    <remarks>
      <para>Default animations for changes in position, bounds, and sublayers are turned off. The default layer is not opaque and does not mask to bounds.</para>
      <para>
        <xrefsect id="todo_1_todo000008">
          <xreftitle>Todo</xreftitle>
          <xrefdescription>
            <para>More documentation needed </para>
          </xrefdescription>
        </xrefsect>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTLayer (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTLayer (System.Drawing.RectangleF newFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF newFrame) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithFrame:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newFrame" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="newFrame">The frame rectangle. </param>
        <summary>
          <para>Initializes a newly allocated <see cref="T:CorePlot.CPTLayer" /> object with the provided frame rectangle. </para>
        </summary>
        <remarks>
          <para>This is the designated initializer. The initialized layer will have the following properties that are different than a CALayer:<list type="bullet"><item><description>needsDisplayOnBoundsChange = NO</description></item><item><description>opaque = NO</description></item><item><description>masksToBounds = NO</description></item><item><description>padding = 0 on all four sides</description></item><item><description>Default animations for changes in position, bounds, and sublayers are turned off.</description></item></list></para>
          <para>
            <para>The initialized <see cref="T:CorePlot.CPTLayer" /> object. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTLayer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyMaskToContext">
      <MemberSignature Language="C#" Value="public virtual void ApplyMaskToContext (MonoTouch.CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyMaskToContext(class MonoTouch.CoreGraphics.CGContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("applyMaskToContext:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context to clip. </param>
        <summary>
          <para>Sets the clipping path of the given graphics context to mask the content. </para>
        </summary>
        <remarks>
          <para>The clipping path is built by recursively climbing the layer tree and combining the sublayer masks from each super layer. The tree traversal stops when a layer is encountered that is not a <see cref="T:CorePlot.CPTLayer" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplySublayerMask">
      <MemberSignature Language="C#" Value="public virtual void ApplySublayerMask (MonoTouch.CoreGraphics.CGContext toContext, CorePlot.CPTLayer forSublayer, System.Drawing.PointF offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplySublayerMask(class MonoTouch.CoreGraphics.CGContext toContext, class CorePlot.CPTLayer forSublayer, valuetype System.Drawing.PointF offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("applySublayerMaskToContext:forSublayer:withOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toContext" Type="MonoTouch.CoreGraphics.CGContext" />
        <Parameter Name="forSublayer" Type="CorePlot.CPTLayer" />
        <Parameter Name="offset" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="toContext">The graphics context to clip. </param>
        <param name="forSublayer">The sublayer that called this method. </param>
        <param name="offset">The cumulative position offset between the receiver and the first layer in the recursive calling chain. </param>
        <summary>
          <para>Recursively sets the clipping path of the given graphics context to the sublayer masking paths of its superlayers. </para>
        </summary>
        <remarks>
          <para>The clipping path is built by recursively climbing the layer tree and combining the sublayer masks from each super layer. The tree traversal stops when a layer is encountered that is not a <see cref="T:CorePlot.CPTLayer" />.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIColor Color { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.UIKit.UIColor Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("uiColor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultZPosition">
      <MemberSignature Language="C#" Value="public static float DefaultZPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 DefaultZPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("defaultZPosition")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageOfLayer">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.UIKit.UIImage GetImageOfLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.UIKit.UIImage GetImageOfLayer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("imageOfLayer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets an image of the layer contents. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>A native image representation of the layer content. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPDFRepresentationOfLayer">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSData GetPDFRepresentationOfLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Foundation.NSData GetPDFRepresentationOfLayer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dataForPDFRepresentationOfLayer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Draws layer content and the content of all sublayers into a PDF document. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>PDF representation of the layer content. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graph">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTGraph Graph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTGraph Graph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("CPTGraph")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setCPTGraph:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTGraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerBorderPath">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPath InnerBorderPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreGraphics.CGPath InnerBorderPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("innerBorderPath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setInnerBorderPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A drawing path that encompasses the inner boundary of the layer border. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutAndRender">
      <MemberSignature Language="C#" Value="public virtual void LayoutAndRender (MonoTouch.CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LayoutAndRender(class MonoTouch.CoreGraphics.CGContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("layoutAndRenderInContext:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context to draw into. </param>
        <summary>
          <para>Updates the layer layout if needed and then draws layer content and the content of all sublayers into the provided graphics context. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutManager">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTLayoutManager LayoutManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTLayoutManager LayoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("layoutManager")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setLayoutManager:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTLayoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maskingpath">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPath Maskingpath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreGraphics.CGPath Maskingpath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("maskingPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A drawing path that encompasses the layer content including any borders. Set to NULL when no masking is desired. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>This path defines the outline of the layer and is used to mask all drawing. Set to NULL when no masking is desired. The caller must NOT release the path returned by this property. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MasksToBorder">
      <MemberSignature Language="C#" Value="public virtual bool MasksToBorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MasksToBorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("masksToBorder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setMasksToBorder:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If YES, a sublayer mask is applied to clip sublayer content to the inside of the border. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OuterBorderPath">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPath OuterBorderPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreGraphics.CGPath OuterBorderPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("outerBorderPath")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setOuterBorderPath:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A drawing path that encompasses the outer boundary of the layer border. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="C#" Value="public virtual float PaddingBottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paddingBottom")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setPaddingBottom:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Amount to inset the bottom of each sublayer. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="C#" Value="public virtual float PaddingLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paddingLeft")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setPaddingLeft:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Amount to inset the left side of each sublayer. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="C#" Value="public virtual float PaddingRight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paddingRight")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setPaddingRight:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Amount to inset the right side of each sublayer. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="C#" Value="public virtual float PaddingTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("paddingTop")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setPaddingTop:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Amount to inset the top of each sublayer. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelAlign">
      <MemberSignature Language="C#" Value="public virtual void PixelAlign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PixelAlign() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pixelAlign")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Align the receiver's position with pixel boundaries. </para>
        </summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceCancelledEvent">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceCancelledEvent (MonoTouch.Foundation.NSObject theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceCancelledEvent(class MonoTouch.Foundation.NSObject theEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceCancelledEvent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceDown">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceDown (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceDown(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceDownEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceDragged">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceDragged (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceDragged(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceDraggedEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceUp">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceUp (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceUp(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceUpEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecursivelyRender">
      <MemberSignature Language="C#" Value="public virtual void RecursivelyRender (MonoTouch.CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecursivelyRender(class MonoTouch.CoreGraphics.CGContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("recursivelyRenderInContext:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context to draw into. </param>
        <summary>
          <para>Draws layer content and the content of all sublayers into the provided graphics context. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAsVector">
      <MemberSignature Language="C#" Value="public virtual void RenderAsVector (MonoTouch.CoreGraphics.CGContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderAsVector(class MonoTouch.CoreGraphics.CGContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("renderAsVectorInContext:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
      </Parameters>
      <Docs>
        <param name="context">The graphics context to draw into. </param>
        <summary>
          <para>Draws layer content into the provided graphics context. </para>
        </summary>
        <remarks>
          <para>This method replaces the drawInContext: method to ensure that layer content is always drawn as vectors and objects rather than as a cached bitmapped image representation. Subclasses should do all drawing here and must call super to set up the clipping path.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SublayerMaskingPath">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.CoreGraphics.CGPath SublayerMaskingPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.CoreGraphics.CGPath SublayerMaskingPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sublayerMaskingPath")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CoreGraphics.CGPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A drawing path that encompasses the layer content excluding any borders. Set to NULL when no masking is desired. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>This path defines the outline of the part of the layer where sublayers should draw and is used to mask all sublayer drawing. Set to NULL when no masking is desired. The caller must NOT release the path returned by this property. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SublayersExcludedFromAutomaticLayout">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSSet SublayersExcludedFromAutomaticLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSSet SublayersExcludedFromAutomaticLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sublayersExcludedFromAutomaticLayout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>A set of sublayers that should be excluded from the automatic sublayer layout. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseFastRendering">
      <MemberSignature Language="C#" Value="public virtual bool UseFastRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseFastRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("useFastRendering")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>If YES, subclasses should optimize their drawing for speed over precision. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
