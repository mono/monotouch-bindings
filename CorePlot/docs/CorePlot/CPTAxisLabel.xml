<Type Name="CPTAxisLabel" FullName="CorePlot.CPTAxisLabel">
  <TypeSignature Language="C#" Value="public class CPTAxisLabel : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPTAxisLabel extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>CorePlotiOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CPTAxisLabel", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>An axis label. </para>
    </summary>
    <remarks>
      <para>The label can be text-based or can be the content of any <see cref="T:CorePlot.CPTLayer" /> provided by the user. </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTAxisLabel (CorePlot.CPTLayer layer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CorePlot.CPTLayer layer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithContentLayer:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="layer" Type="CorePlot.CPTLayer" />
      </Parameters>
      <Docs>
        <param name="layer">The label content. </param>
        <summary>
          <para>Initializes a newly allocated <see cref="T:CorePlot.CPTAxisLabel" /> object with the provided layer. This is the designated initializer. </para>
        </summary>
        <remarks>
          <para>
            <para>The initialized <see cref="T:CorePlot.CPTAxisLabel" /> object. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTAxisLabel (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTAxisLabel (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTAxisLabel (string newText, CorePlot.CPTTextStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string newText, class CorePlot.CPTTextStyle style) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("initWithText:textStyle:")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newText" Type="System.String" />
        <Parameter Name="style" Type="CorePlot.CPTTextStyle" />
      </Parameters>
      <Docs>
        <param name="newText">The label text. </param>
        <param name="style">The text style for the label. </param>
        <summary>
          <para>Initializes a newly allocated text-based <see cref="T:CorePlot.CPTAxisLabel" /> object with the provided text and style. </para>
        </summary>
        <remarks>
          <para>
            <para>The initialized <see cref="T:CorePlot.CPTAxisLabel" /> object. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CorePlot.CPTAlignment Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("alignment")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAlignment:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The alignment of the axis label with respect to the tick mark. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePositionBetween">
      <MemberSignature Language="C#" Value="public virtual void ComputePositionBetween (System.Drawing.PointF firstPoint, System.Drawing.PointF secondPoint, CorePlot.CPTCoordinate coordinate, CorePlot.CPTSign direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePositionBetween(valuetype System.Drawing.PointF firstPoint, valuetype System.Drawing.PointF secondPoint, valuetype CorePlot.CPTCoordinate coordinate, valuetype CorePlot.CPTSign direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("positionBetweenViewPoint:andViewPoint:forCoordinate:inDirection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPoint" Type="System.Drawing.PointF" />
        <Parameter Name="secondPoint" Type="System.Drawing.PointF" />
        <Parameter Name="coordinate" Type="CorePlot.CPTCoordinate" />
        <Parameter Name="direction" Type="CorePlot.CPTSign" />
      </Parameters>
      <Docs>
        <param name="firstPoint">The first view point. </param>
        <param name="secondPoint">The second view point. </param>
        <param name="coordinate">The axis coordinate. </param>
        <param name="direction">The offset direction. </param>
        <summary>
          <para>Positions the axis label between two given points. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputePositionRelative">
      <MemberSignature Language="C#" Value="public virtual void ComputePositionRelative (System.Drawing.PointF viewPoint, CorePlot.CPTCoordinate forCoordinate, CorePlot.CPTSign inDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputePositionRelative(valuetype System.Drawing.PointF viewPoint, valuetype CorePlot.CPTCoordinate forCoordinate, valuetype CorePlot.CPTSign inDirection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("positionRelativeToViewPoint:forCoordinate:inDirection:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPoint" Type="System.Drawing.PointF" />
        <Parameter Name="forCoordinate" Type="CorePlot.CPTCoordinate" />
        <Parameter Name="inDirection" Type="CorePlot.CPTSign" />
      </Parameters>
      <Docs>
        <param name="viewPoint">The view point. </param>
        <param name="forCoordinate">The coordinate in which the label is being position. Orthogonal to the axis coordinate. </param>
        <param name="inDirection">The offset direction. </param>
        <summary>
          <para>Positions the axis label relative to the given point. The algorithm for positioning is different when the rotation property is non-zero. When zero, the anchor point is positioned along the closest side of the label. When non-zero, the anchor point is left at the center. This has consequences for the value taken by the offset. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLayer">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTLayer ContentLayer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTLayer ContentLayer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("contentLayer")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setContentLayer:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTLayer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The label content. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public virtual float Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("offset")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setOffset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The offset distance between the axis and label. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("rotation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setRotation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The rotation of the label in radians. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickLocation">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSDecimal TickLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Foundation.NSDecimal TickLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("tickLocation")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setTickLocation:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The data coordinate of the ticklocation. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
