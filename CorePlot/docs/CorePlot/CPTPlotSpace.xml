<Type Name="CPTPlotSpace" FullName="CorePlot.CPTPlotSpace">
  <TypeSignature Language="C#" Value="public class CPTPlotSpace : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CPTPlotSpace extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo>
    <AssemblyName>CorePlotiOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CPTPlotSpace", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Defines the coordinate system of a plot. </para>
    </summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlotSpace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlotSpace (MonoTouch.Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CPTPlotSpace (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsUserInteraction">
      <MemberSignature Language="C#" Value="public virtual bool AllowsUserInteraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsUserInteraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("allowsUserInteraction")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setAllowsUserInteraction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>Determines whether user can interactively change plot range and/or zoom. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegate">
      <MemberSignature Language="C#" Value="public CorePlot.CPTPlotSpaceDelegate Delegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTPlotSpaceDelegate Delegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotSpaceDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidChangePlotRange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;CorePlot.CPTPlotChangedEventArgs&gt; DidChangePlotRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class CorePlot.CPTPlotChangedEventArgs&gt; DidChangePlotRange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;CorePlot.CPTPlotChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPlotRange">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTPlotRange GetPlotRange (CorePlot.CPTCoordinate coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CorePlot.CPTPlotRange GetPlotRange(valuetype CorePlot.CPTCoordinate coordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotRangeForCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTPlotRange</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coordinate" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="coordinate">The axis coordinate. </param>
        <summary>
          <para>Gets the range of values for a given coordinate. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The range of values. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaleType">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTScaleType GetScaleType (CorePlot.CPTCoordinate forCoordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype CorePlot.CPTScaleType GetScaleType(valuetype CorePlot.CPTCoordinate forCoordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scaleTypeForCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTScaleType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forCoordinate" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="forCoordinate">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Graph">
      <MemberSignature Language="C#" Value="public virtual CorePlot.CPTGraph Graph { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTGraph Graph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("graph")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setGraph:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CorePlot.CPTGraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The graph of the space. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject Identifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("identifier")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setIdentifier:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>An object used to identify the plot in collections. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotAreaViewPoint">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF PlotAreaViewPoint (MonoTouch.Foundation.NSDecimal forPlotPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF PlotAreaViewPoint(valuetype MonoTouch.Foundation.NSDecimal forPlotPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotAreaViewPointForPlotPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forPlotPoint" Type="MonoTouch.Foundation.NSDecimal" />
      </Parameters>
      <Docs>
        <param name="forPlotPoint">A c-style array of data point coordinates (as NSDecimals). </param>
        <summary>
          <para>Converts a data point to plot area drawing coordinates. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The drawing coordinates of the data point. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotAreaViewPoint">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.PointF PlotAreaViewPoint (double plotPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.PointF PlotAreaViewPoint(float64 plotPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotAreaViewPointForDoublePrecisionPlotPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plotPoint" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="plotPoint">A c-style array of data point coordinates (as doubles). </param>
        <summary>
          <para>Converts a data point to plot area drawing coordinates. </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <para>The drawing coordinates of the data point. </para>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotPoint">
      <MemberSignature Language="C#" Value="public virtual void PlotPoint (ref double plotPoint, System.Drawing.PointF plotAreaViewPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlotPoint(float64 plotPoint, valuetype System.Drawing.PointF plotAreaViewPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("doublePrecisionPlotPoint:forPlotAreaViewPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plotPoint" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="plotAreaViewPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="plotPoint">A c-style array of data point coordinates (as doubles). </param>
        <param name="plotAreaViewPoint">The drawing coordinates of the data point. </param>
        <summary>
          <para>Converts a point given in drawing coordinates to the data coordinate space. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlotPointforPlotAreaViewPoint">
      <MemberSignature Language="C#" Value="public virtual void PlotPointforPlotAreaViewPoint (ref MonoTouch.Foundation.NSDecimal plotPoint, System.Drawing.PointF plotAreaViewPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlotPointforPlotAreaViewPoint(valuetype MonoTouch.Foundation.NSDecimal plotPoint, valuetype System.Drawing.PointF plotAreaViewPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("plotPoint:forPlotAreaViewPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plotPoint" Type="MonoTouch.Foundation.NSDecimal&amp;" RefType="ref" />
        <Parameter Name="plotAreaViewPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="plotPoint">A c-style array of data point coordinates (as NSDecimals). </param>
        <param name="plotAreaViewPoint">The drawing coordinates of the data point. </param>
        <summary>
          <para>Converts a point given in plot area drawing coordinates to the data coordinate space. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceCancelledEvent">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceCancelledEvent (MonoTouch.Foundation.NSObject theEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceCancelledEvent(class MonoTouch.Foundation.NSObject theEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceCancelledEvent:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceDown">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceDown (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceDown(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceDownEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceDragged">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceDragged (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceDragged(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceDraggedEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointingDeviceUp">
      <MemberSignature Language="C#" Value="public virtual bool PointingDeviceUp (MonoTouch.Foundation.NSObject theEvent, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PointingDeviceUp(class MonoTouch.Foundation.NSObject theEvent, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("pointingDeviceUpEvent:atPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theEvent" Type="MonoTouch.Foundation.NSObject" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="theEvent">To be added.</param>
        <param name="interactionPoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual void Scale (float interactionScale, System.Drawing.PointF interactionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Scale(float32 interactionScale, valuetype System.Drawing.PointF interactionPoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scaleBy:aboutPoint:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interactionScale" Type="System.Single" />
        <Parameter Name="interactionPoint" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="interactionScale">The scaling factor. One gives no scaling. </param>
        <param name="interactionPoint">The plot area view point about which the scaling occurs. </param>
        <summary>
          <para>Zooms the plot space equally in each dimension. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleToFitPlots">
      <MemberSignature Language="C#" Value="public virtual void ScaleToFitPlots (CorePlot.CPTPlot[] plots);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScaleToFitPlots(class CorePlot.CPTPlot[] plots) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("scaleToFitPlots:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plots" Type="CorePlot.CPTPlot[]" />
      </Parameters>
      <Docs>
        <param name="plots">An array of the plots that have to fit in the visible area. </param>
        <summary>
          <para>Scales the plot ranges so that the plots just fit in the visible space. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlotRange">
      <MemberSignature Language="C#" Value="public virtual void SetPlotRange (CorePlot.CPTPlotRange newRange, CorePlot.CPTCoordinate coordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlotRange(class CorePlot.CPTPlotRange newRange, valuetype CorePlot.CPTCoordinate coordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setPlotRange:forCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newRange" Type="CorePlot.CPTPlotRange" />
        <Parameter Name="coordinate" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="newRange">The new plot range. </param>
        <param name="coordinate">The axis coordinate. </param>
        <summary>
          <para>Sets the range of values for a given coordinate. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScaleType">
      <MemberSignature Language="C#" Value="public virtual void SetScaleType (CorePlot.CPTScaleType scaleType, CorePlot.CPTCoordinate forCoordinate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScaleType(valuetype CorePlot.CPTScaleType scaleType, valuetype CorePlot.CPTCoordinate forCoordinate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setScaleType:forCoordinate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleType" Type="CorePlot.CPTScaleType" />
        <Parameter Name="forCoordinate" Type="CorePlot.CPTCoordinate" />
      </Parameters>
      <Docs>
        <param name="scaleType">The new scale type. </param>
        <param name="forCoordinate">The axis coordinate. </param>
        <summary>
          <para>Sets the scale type for a given coordinate. </para>
        </summary>
        <remarks>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandlePointingDeviceCancelledEvent">
      <MemberSignature Language="C#" Value="public CorePlot.CPTEventPredicate ShouldHandlePointingDeviceCancelledEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTEventPredicate ShouldHandlePointingDeviceCancelledEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTEventPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandlePointingDeviceDownEvent">
      <MemberSignature Language="C#" Value="public CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceDownEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceDownEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTEventPointPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandlePointingDeviceDraggedEvent">
      <MemberSignature Language="C#" Value="public CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceDraggedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceDraggedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTEventPointPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldHandlePointingDeviceUpEvent">
      <MemberSignature Language="C#" Value="public CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceUpEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTEventPointPredicate ShouldHandlePointingDeviceUpEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTEventPointPredicate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakDelegate">
      <MemberSignature Language="C#" Value="public virtual MonoTouch.Foundation.NSObject WeakDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Foundation.NSObject WeakDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("delegate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: MonoTouch.Foundation.Export("setDelegate:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>The plot space delegate. </para>
        </summary>
        <value>To be added.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillChangePlotRange">
      <MemberSignature Language="C#" Value="public CorePlot.CPTWillChangePlotRange WillChangePlotRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTWillChangePlotRange WillChangePlotRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTWillChangePlotRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WillDisplaceBy">
      <MemberSignature Language="C#" Value="public CorePlot.CPTDisplacement WillDisplaceBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CorePlot.CPTDisplacement WillDisplaceBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CorePlot.CPTDisplacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
